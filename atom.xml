<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>五年</title>
  <subtitle>你在键盘敲很轻</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shihp.github.io/"/>
  <updated>2018-10-11T02:43:36.547Z</updated>
  <id>https://shihp.github.io/</id>
  
  <author>
    <name>walter</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>yii-fpm yii-swoole 压测</title>
    <link href="https://shihp.github.io/2018/10/10/php/yii-fpm%20yii-swoole%20%E5%8E%8B%E6%B5%8B/"/>
    <id>https://shihp.github.io/2018/10/10/php/yii-fpm yii-swoole 压测/</id>
    <published>2018-10-10T10:20:44.000Z</published>
    <updated>2018-10-11T02:43:36.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yii-fpm-yii-swoole-压测"><a href="#yii-fpm-yii-swoole-压测" class="headerlink" title="yii-fpm yii-swoole 压测"></a>yii-fpm yii-swoole 压测</h1><hr>
<p>[toc]</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p>swoole 的压测; 配置和机器的 core 数相关<br>并发数越多响应时间越长1w 并发; 平均响应时间在2s 以上<br>ab压测的并发数据显示,瓶颈在域名解析上,使用ip地址作为压测地址对服务器负载更准确<br>压测结果有浮动,仅供参考,如果有需要,可以联系我深入交流 ~</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>nginx 单独请求 4worker 1000+<br>nginx 单独请求 8worker/16worker 极限2000+<br>swoole 在 -c 5000 -n 100000  每秒请求数 4810.78 平均响应时间 1039.333<br>swoole 在 -c 10000 -n 100000 每秒请求数 4681.32 最平均响应时间 2136.151<br><code>这个地方 swoole 配合 nginx 比 nginx 单独访问 qps 还高....?</code></p>
</blockquote>
<h2 id="机器配置"><a href="#机器配置" class="headerlink" title="机器配置"></a>机器配置</h2><p><code>vagrant / virtualbox 2核心 4gb内存</code></p>
<h3 id="cat-proc-version"><a href="#cat-proc-version" class="headerlink" title="cat /proc/version"></a>cat /proc/version</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Linux version 3.10.0-862.3.3.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC) ) #1 SMP Fri Jun 15 04:15:27 UTC 2018</div></pre></td></tr></table></figure>
<h3 id="uname-a"><a href="#uname-a" class="headerlink" title="uname -a"></a>uname -a</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Linux localhost.localdomain 3.10.0-862.3.3.el7.x86_64 #1 SMP Fri Jun 15 04:15:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</div></pre></td></tr></table></figure>
<h3 id="cat-etc-redhat-release-lsb-release-a"><a href="#cat-etc-redhat-release-lsb-release-a" class="headerlink" title="cat/etc/redhat-release / lsb_release -a"></a>cat/etc/redhat-release / lsb_release -a</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS Linux release 7.5.1804 (Core)</div></pre></td></tr></table></figure>
<h3 id="cat-proc-cpuinfo"><a href="#cat-proc-cpuinfo" class="headerlink" title="cat /proc/cpuinfo"></a>cat /proc/cpuinfo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">processor	: 0</div><div class="line">vendor_id	: GenuineIntel</div><div class="line">cpu family	: 6</div><div class="line">model		: 61</div><div class="line">model name	: Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz</div><div class="line">stepping	: 4</div><div class="line">cpu MHz		: 2699.998</div><div class="line">cache size	: 3072 KB</div><div class="line">physical id	: 0</div><div class="line">siblings	: 2</div><div class="line">core id		: 0</div><div class="line">cpu cores	: 2</div><div class="line">apicid		: 0</div><div class="line">initial apicid	: 0</div><div class="line">fpu		: yes</div><div class="line">fpu_exception	: yes</div><div class="line">cpuid level	: 20</div><div class="line">wp		: yes</div><div class="line">flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc eagerfpu pni pclmulqdq ssse3 cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx rdrand hypervisor lahf_lm abm 3dnowprefetch avx2 rdseed</div><div class="line">bogomips	: 5399.99</div><div class="line">clflush size	: 64</div><div class="line">cache_alignment	: 64</div><div class="line">address sizes	: 39 bits physical, 48 bits virtual</div><div class="line">power management:</div><div class="line"></div><div class="line">processor	: 1</div><div class="line">vendor_id	: GenuineIntel</div><div class="line">cpu family	: 6</div><div class="line">model		: 61</div><div class="line">model name	: Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz</div><div class="line">stepping	: 4</div><div class="line">cpu MHz		: 2699.998</div><div class="line">cache size	: 3072 KB</div><div class="line">physical id	: 0</div><div class="line">siblings	: 2</div><div class="line">core id		: 1</div><div class="line">cpu cores	: 2</div><div class="line">apicid		: 1</div><div class="line">initial apicid	: 1</div><div class="line">fpu		: yes</div><div class="line">fpu_exception	: yes</div><div class="line">cpuid level	: 20</div><div class="line">wp		: yes</div><div class="line">flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc eagerfpu pni pclmulqdq ssse3 cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx rdrand hypervisor lahf_lm abm 3dnowprefetch avx2 rdseed</div><div class="line">bogomips	: 5399.99</div><div class="line">clflush size	: 64</div><div class="line">cache_alignment	: 64</div><div class="line">address sizes	: 39 bits physical, 48 bits virtual</div><div class="line">power management:</div></pre></td></tr></table></figure>
<h3 id="nginx-4work"><a href="#nginx-4work" class="headerlink" title="nginx 4work"></a>nginx 4work</h3><p>ab -c 1000 -n 10000 <a href="http://192.168.33.20/" target="_blank" rel="external">http://192.168.33.20/</a><br>1149.540<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Server Software:        nginx/1.12.1</div><div class="line">Server Hostname:        192.168.33.20</div><div class="line">Server Port:            80</div><div class="line"></div><div class="line">Document Path:          /</div><div class="line">Document Length:        612 bytes</div><div class="line"></div><div class="line">Concurrency Level:      1000</div><div class="line">Time taken for tests:   11.495 seconds</div><div class="line">Complete requests:      10000</div><div class="line">Failed requests:        0</div><div class="line">Total transferred:      8450000 bytes</div><div class="line">HTML transferred:       6120000 bytes</div><div class="line">Requests per second:    869.91 [#/sec] (mean)</div><div class="line">Time per request:       1149.540 [ms] (mean)</div><div class="line">Time per request:       1.150 [ms] (mean, across all concurrent requests)</div><div class="line">Transfer rate:          717.85 [Kbytes/sec] received</div><div class="line"></div><div class="line">Connection Times (ms)</div><div class="line">              min  mean[+/-sd] median   max</div><div class="line">Connect:       25  145 201.5    113    2298</div><div class="line">Processing:    39  227 819.2    161   11312</div><div class="line">Waiting:       37  215 819.9    144   11312</div><div class="line">Total:         84  372 840.5    270   11400</div></pre></td></tr></table></figure></p>
<h3 id="nginx-8work"><a href="#nginx-8work" class="headerlink" title="nginx 8work"></a>nginx 8work</h3><p>ab -c 1000 -n 10000 <a href="http://192.168.33.20/" target="_blank" rel="external">http://192.168.33.20/</a><br>2791.84<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">Server Software:        nginx/1.12.1</div><div class="line">Server Hostname:        192.168.33.20</div><div class="line">Server Port:            80</div><div class="line"></div><div class="line">Document Path:          /</div><div class="line">Document Length:        612 bytes</div><div class="line"></div><div class="line">Concurrency Level:      1000</div><div class="line">Time taken for tests:   3.582 seconds</div><div class="line">Complete requests:      10000</div><div class="line">Failed requests:        0</div><div class="line">Total transferred:      8450000 bytes</div><div class="line">HTML transferred:       6120000 bytes</div><div class="line">Requests per second:    2791.84 [#/sec] (mean)</div><div class="line">Time per request:       358.187 [ms] (mean)</div><div class="line">Time per request:       0.358 [ms] (mean, across all concurrent requests)</div><div class="line">Transfer rate:          2303.81 [Kbytes/sec] received</div><div class="line"></div><div class="line">Connection Times (ms)</div><div class="line">              min  mean[+/-sd] median   max</div><div class="line">Connect:       23  147 133.6    136    1223</div><div class="line">Processing:    55  189  56.0    189     441</div><div class="line">Waiting:       20  158  47.4    157     409</div><div class="line">Total:        151  337 143.6    320    1469</div><div class="line"></div><div class="line">Percentage of the requests served within a certain time (ms)</div><div class="line">  50%    320</div><div class="line">  66%    338</div><div class="line">  75%    357</div><div class="line">  80%    370</div><div class="line">  90%    394</div><div class="line">  95%    421</div><div class="line">  98%    465</div><div class="line">  99%   1430</div><div class="line"> 100%   1469 (longest request)</div></pre></td></tr></table></figure></p>
<h3 id="swoole"><a href="#swoole" class="headerlink" title="swoole"></a>swoole</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&apos;max_coro_num&apos; =&gt; 300,</div><div class="line">      &apos;reactor_num&apos; =&gt; 4,</div><div class="line">      &apos;worker_num&apos; =&gt; 8,</div><div class="line">      &apos;max_connection&apos; =&gt; 1000,</div></pre></td></tr></table></figure>
<p><code>ulimit -n 100000</code><br><code>ab -c 5000 -n 100000 http://127.0.0.1/index.php?r=user/test-json</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">Server Software:        nginx/1.12.1</div><div class="line">Server Hostname:        127.0.0.1</div><div class="line">Server Port:            80</div><div class="line"></div><div class="line">Document Path:          /index.php?r=user/test-json</div><div class="line">Document Length:        169 bytes</div><div class="line"></div><div class="line">Concurrency Level:      5000</div><div class="line">Time taken for tests:   29.344 seconds</div><div class="line">Complete requests:      100000</div><div class="line">Failed requests:        0</div><div class="line">Write errors:           0</div><div class="line">Non-2xx responses:      100000</div><div class="line">Total transferred:      31900000 bytes</div><div class="line">HTML transferred:       16900000 bytes</div><div class="line">Requests per second:    3407.85 [#/sec] (mean)</div><div class="line">Time per request:       1467.199 [ms] (mean)</div><div class="line">Time per request:       0.293 [ms] (mean, across all concurrent requests)</div><div class="line">Transfer rate:          1061.63 [Kbytes/sec] received</div><div class="line"></div><div class="line">Connection Times (ms)</div><div class="line">              min  mean[+/-sd] median   max</div><div class="line">Connect:        0  677 238.2    597    1521</div><div class="line">Processing:    95  756 226.1    694    1802</div><div class="line">Waiting:        0  502 223.6    464    1289</div><div class="line">Total:        494 1433 382.9   1315    2813</div><div class="line"></div><div class="line">Percentage of the requests served within a certain time (ms)</div><div class="line">  50%   1315</div><div class="line">  66%   1560</div><div class="line">  75%   1685</div><div class="line">  80%   1746</div><div class="line">  90%   1952</div><div class="line">  95%   2214</div><div class="line">  98%   2431</div><div class="line">  99%   2510</div><div class="line"> 100%   2813 (longest request)</div></pre></td></tr></table></figure>
<h4 id="同环境同测试-nginx-对比"><a href="#同环境同测试-nginx-对比" class="headerlink" title="同环境同测试 nginx 对比"></a>同环境同测试 nginx 对比</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ab -c 5000 -n 100000 http://192.168.33.20/</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">Server Software:        nginx/1.12.1</div><div class="line">Server Hostname:        192.168.33.20</div><div class="line">Server Port:            80</div><div class="line"></div><div class="line">Document Path:          /</div><div class="line">Document Length:        612 bytes</div><div class="line"></div><div class="line">Concurrency Level:      5000</div><div class="line">Time taken for tests:   24.464 seconds</div><div class="line">Complete requests:      100000</div><div class="line">Failed requests:        0</div><div class="line">Write errors:           0</div><div class="line">Total transferred:      84500000 bytes</div><div class="line">HTML transferred:       61200000 bytes</div><div class="line">Requests per second:    4087.57 [#/sec] (mean)</div><div class="line">Time per request:       1223.222 [ms] (mean)</div><div class="line">Time per request:       0.245 [ms] (mean, across all concurrent requests)</div><div class="line">Transfer rate:          3373.04 [Kbytes/sec] received</div><div class="line"></div><div class="line">Connection Times (ms)</div><div class="line">              min  mean[+/-sd] median   max</div><div class="line">Connect:        0  548 131.6    515    1247</div><div class="line">Processing:    96  647 181.1    602    1396</div><div class="line">Waiting:        0  453 184.2    428    1196</div><div class="line">Total:        501 1196 234.2   1112    2128</div><div class="line"></div><div class="line">Percentage of the requests served within a certain time (ms)</div><div class="line">  50%   1112</div><div class="line">  66%   1195</div><div class="line">  75%   1257</div><div class="line">  80%   1316</div><div class="line">  90%   1673</div><div class="line">  95%   1724</div><div class="line">  98%   1762</div><div class="line">  99%   1815</div><div class="line"> 100%   2128 (longest request)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;yii-fpm-yii-swoole-压测&quot;&gt;&lt;a href=&quot;#yii-fpm-yii-swoole-压测&quot; class=&quot;headerlink&quot; title=&quot;yii-fpm yii-swoole 压测&quot;&gt;&lt;/a&gt;yii-fpm yii-swoole 压测&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;swoole 的压测; 配置和机器的 core 数相关&lt;br&gt;并发数越多响应时间越长1w 并发; 平均响应时间在2s 以上&lt;br&gt;ab压测的并发数据显示,瓶颈在域名解析上,使用ip地址作为压测地址对服务器负载更准确&lt;br&gt;压测结果有浮动,仅供参考,如果有需要,可以联系我深入交流 ~&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://shihp.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>yii swoole 集成方案</title>
    <link href="https://shihp.github.io/2018/10/10/php/yii-swoole%20%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88/"/>
    <id>https://shihp.github.io/2018/10/10/php/yii-swoole 集成方案/</id>
    <published>2018-10-10T10:20:44.000Z</published>
    <updated>2018-10-11T02:43:52.947Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yii-swoole-集成方案"><a href="#yii-swoole-集成方案" class="headerlink" title="yii swoole 集成方案"></a>yii swoole 集成方案</h1><blockquote>
<p>本文档针对 http 服务的集成,仅仅在测试阶段</p>
</blockquote>
<a id="more"></a>
<p>文件 composer.json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&quot;require&quot;: &#123;</div><div class="line">		......</div><div class="line">        &quot;tsingsun/yii2-swoole&quot;: &quot;2.0.3.1&quot;</div><div class="line">    &#125;,</div></pre></td></tr></table></figure></p>
<blockquote>
<p><code>composer update</code><br><code>composer install</code></p>
</blockquote>
<p><a href="https://github.com/shihp/yii-basic-app/blob/master/web/swoole-http.php" target="_blank" rel="external">swoole-http.php文件查看</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;yii-swoole-集成方案&quot;&gt;&lt;a href=&quot;#yii-swoole-集成方案&quot; class=&quot;headerlink&quot; title=&quot;yii swoole 集成方案&quot;&gt;&lt;/a&gt;yii swoole 集成方案&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本文档针对 http 服务的集成,仅仅在测试阶段&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://shihp.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>go model struct  生成</title>
    <link href="https://shihp.github.io/2018/09/21/go/go%20model%20struct%20%E7%94%9F%E6%88%90/"/>
    <id>https://shihp.github.io/2018/09/21/go/go model struct 生成/</id>
    <published>2018-09-21T12:20:44.000Z</published>
    <updated>2018-09-24T14:44:55.167Z</updated>
    
    <content type="html"><![CDATA[<hr>
<blockquote>
<p>在实际使用 go model 时,创建表 type 重复性工作工具化</p>
</blockquote>
<a id="more"></a>
<blockquote>
<p>用户针对数据表生成对应的 struct</p>
</blockquote>
<p>调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">structGen(mysql.DBTest,&quot;table&quot;)</div></pre></td></tr></table></figure>
<p>返回<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">type Table struct &#123;</div><div class="line">	Id                 int64  `json:&quot;id&quot;`</div><div class="line">	UserId             int64  `json:&quot;user_id&quot;`</div><div class="line">	RealName           string `json:&quot;real_name&quot;`</div><div class="line">	RegMobile          string `json:&quot;reg_mobile&quot;`</div><div class="line">	Level              int64  `json:&quot;level&quot;`</div><div class="line">	Grow               int64  `json:&quot;grow&quot;`</div><div class="line">	WithdrawTimes      int64  `json:&quot;withdraw_times&quot;`</div><div class="line">	WithdrawUpdateTime int64  `json:&quot;withdraw_update_time&quot;`</div><div class="line">	DegradeTime        int64  `json:&quot;degrade_time&quot;`</div><div class="line">	CardId             string `json:&quot;card_id&quot;`</div><div class="line">	RegisterTime       int64  `json:&quot;register_time&quot;`</div><div class="line">	Birthday           int64  `json:&quot;birthday&quot;`</div><div class="line">	Type               int64  `json:&quot;type&quot;`</div><div class="line">	CreateTime         int64  `json:&quot;create_time&quot;`</div><div class="line">	UpdateTime         int64  `json:&quot;update_time&quot;`</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>util.go<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">package vip</div><div class="line"></div><div class="line">import (</div><div class="line">	&quot;strings&quot;</div><div class="line">	&quot;fmt&quot;</div><div class="line">	&quot;consumer/common&quot;</div><div class="line">	&quot;database/sql&quot;</div><div class="line">	&quot;os&quot;</div><div class="line">)</div><div class="line"></div><div class="line">func structGen(db *sql.DB, tableName string) &#123;</div><div class="line">	structName := nameGen(tableName)</div><div class="line">	res, err := db.Query(&quot;SHOW FULL COLUMNS FROM &quot; + tableName)</div><div class="line">	defer res.Close()</div><div class="line">	common.FailOnError(err, &quot;query fail &quot;)</div><div class="line">	a := &quot;type &quot; + structName + &quot; struct &#123; \n&quot;</div><div class="line">	var c1, c2, c3, c4, c5, c6, c7, c8, c9 string</div><div class="line"></div><div class="line">	var fileType string</div><div class="line">	for res.Next() &#123;</div><div class="line">		res.Scan(&amp;c1, &amp;c2, &amp;c3, &amp;c4, &amp;c5, &amp;c6, &amp;c7, &amp;c8, &amp;c9)</div><div class="line">		info := firstCharToUpper(c1, &quot;_&quot;)</div><div class="line"></div><div class="line">		//todo improve | more micro type</div><div class="line">		if strings.Contains(c2, &quot;int&quot;) &#123;</div><div class="line">			fileType = &quot;int64&quot;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		if strings.Contains(c2, &quot;char&quot;) &#123;</div><div class="line">			fileType = &quot;string&quot;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		aAppend := fmt.Sprintf(&quot;    %s %s `json:\&quot;%s\&quot;` \n&quot;, info, fileType, c1)</div><div class="line">		a += aAppend</div><div class="line">	&#125;</div><div class="line">	a += &quot;&#125;&quot;</div><div class="line"></div><div class="line">	println(a)</div><div class="line">	os.Exit(0)</div><div class="line">&#125;</div><div class="line">func firstCharToUpper(c1, separator string) string &#123;</div><div class="line">	c1Arr := strings.Split(c1, separator)</div><div class="line">	var info string</div><div class="line">	for _, value := range c1Arr &#123;</div><div class="line">		pre := string([]rune(value)[:1])</div><div class="line">		pre = strings.ToUpper(pre)</div><div class="line"></div><div class="line">		strAfter := string([]rune(value)[1:])</div><div class="line">		info += pre + strAfter</div><div class="line">	&#125;</div><div class="line">	return info</div><div class="line">&#125;</div><div class="line"></div><div class="line">func nameGen(tableName string) string &#123;</div><div class="line">	var structName string</div><div class="line">	tableName = strings.ToLower(tableName)</div><div class="line">	structName = firstCharToUpper(tableName, &quot;_&quot;)</div><div class="line">	return structName</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;在实际使用 go model 时,创建表 type 重复性工作工具化&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go mod 使用初探索</title>
    <link href="https://shihp.github.io/2018/09/13/go/go%20mod%20%E4%BD%BF%E7%94%A8%E5%88%9D%E6%8E%A2/"/>
    <id>https://shihp.github.io/2018/09/13/go/go mod 使用初探/</id>
    <published>2018-09-13T12:20:44.000Z</published>
    <updated>2018-09-13T10:27:29.095Z</updated>
    
    <content type="html"><![CDATA[<hr>
<blockquote>
<p>go1.1版本新出的依赖管理 用起来还不错 分享下</p>
</blockquote>
<a id="more"></a>
<h1 id="go-mod-使用指南"><a href="#go-mod-使用指南" class="headerlink" title="go mod 使用指南"></a>go mod 使用指南</h1><hr>
<p>[toc]</p>
<h2 id="翻墙"><a href="#翻墙" class="headerlink" title="翻墙"></a>翻墙</h2><h3 id="本地代理"><a href="#本地代理" class="headerlink" title="本地代理"></a>本地代理</h3><p>可以直接从 golang.org拉代码<br>参考我的博客<a href="https://www.shihuipengx.com/2018/04/02/efficient/privoxy%20over%20the%20wall%20in%20terminal/" target="_blank" rel="external">shadowsocks 下 在 终端 使用 privoxy Over the wall</a></p>
<h3 id="go-mod-replace"><a href="#go-mod-replace" class="headerlink" title="go mod replace"></a>go mod replace</h3><p>使用 <code>go help mod edit</code> 查看帮助文档<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">go mod edit -replace golang.org/x/sys=../golang.org/x/sys</div><div class="line">go mod edit -replace golang.org/x/text@v0.3.0=../golang.org/x/text</div></pre></td></tr></table></figure></p>
<h2 id="vendor"><a href="#vendor" class="headerlink" title="vendor"></a>vendor</h2><p><code>go mod vendor</code></p>
<h2 id="tidy"><a href="#tidy" class="headerlink" title="tidy"></a>tidy</h2><p><code>go mod tidy</code></p>
<blockquote>
<p>over</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;go1.1版本新出的依赖管理 用起来还不错 分享下&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go 微服务实践(docker swarm)</title>
    <link href="https://shihp.github.io/2018/08/09/go/go%20%E5%BA%94%E7%94%A8%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
    <id>https://shihp.github.io/2018/08/09/go/go 应用容器化部署/</id>
    <published>2018-08-09T12:20:44.000Z</published>
    <updated>2018-08-09T08:52:29.535Z</updated>
    
    <content type="html"><![CDATA[<hr>
<blockquote>
<p>go微服务实践(docker swarm 版本…)</p>
</blockquote>
<a id="more"></a>
<h1 id="go-微服务实践-docker-swarm"><a href="#go-微服务实践-docker-swarm" class="headerlink" title="go 微服务实践(docker swarm)"></a>go 微服务实践(docker swarm)</h1><hr>
<p>[toc]</p>
<h2 id="编写-web-服务"><a href="#编写-web-服务" class="headerlink" title="编写 web 服务"></a>编写 web 服务</h2><h2 id="docker-化-http-服务"><a href="#docker-化-http-服务" class="headerlink" title="docker 化 http 服务"></a>docker 化 http 服务</h2><p>编译服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">export GOOS=linux</div><div class="line">go build -o accountservice-linux-amd64</div><div class="line">export GOOS=darwin</div></pre></td></tr></table></figure></p>
<p>docker file<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#docke file 文件</div><div class="line">FROM iron/base</div><div class="line"></div><div class="line">EXPOSE 6767</div><div class="line">ADD accountservice-linux-amd64 /</div><div class="line">ENTRYPOINT [&quot;./accountservice-linux-amd64&quot;]</div></pre></td></tr></table></figure></p>
<p>build 镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">build -t  shihp/accountservice micro-account-service/</div></pre></td></tr></table></figure></p>
<p>启动镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">docker container run --rm -p 8000:6767 -it shihp/micro-account-service</div><div class="line"></div><div class="line">http://127.0.0.1:8000/accounts/10000</div></pre></td></tr></table></figure></p>
<h2 id="docker-swarm-环境"><a href="#docker-swarm-环境" class="headerlink" title="docker swarm 环境"></a>docker swarm 环境</h2><h3 id="创建-machine"><a href="#创建-machine" class="headerlink" title="创建 machine"></a>创建 machine</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-machine create go-micro</div></pre></td></tr></table></figure>
<h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">boot2docker</div><div class="line">#下载地址</div><div class="line">https://github.com/boot2docker/boot2docker/releases/download/v18.05.0-ce/boot2docker.iso</div><div class="line">#本机位置</div><div class="line">mv boot2docker.iso /Users/shihuipeng/.docker/machine/cache/</div></pre></td></tr></table></figure>
<h3 id="docker-machine-swarm-init"><a href="#docker-machine-swarm-init" class="headerlink" title="docker-machine swarm init"></a>docker-machine swarm init</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">docker $(docker-machine config go-micro) swarm init --advertise-addr $(docker-machine ip go-micro)</div><div class="line"></div><div class="line">#    docker swarm join --token SWMTKN-1-36hq2nob9yu6ftovlb5xso6u27zh73m8u7nr1cfcefeja1fsov-c6edidql4h1x5uwgn0lq8zzvq 192.168.99.100:2377</div><div class="line"></div><div class="line"># docker swarm join-token manager</div></pre></td></tr></table></figure>
<h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eval $(docker-machine env swarm-manager-1)</div></pre></td></tr></table></figure>
<h3 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker network create --driver overlay micro_network</div></pre></td></tr></table></figure>
<h3 id="运行-rabbitmq-服务"><a href="#运行-rabbitmq-服务" class="headerlink" title="运行 rabbitmq 服务"></a>运行 rabbitmq 服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./rabbitmqshell</div></pre></td></tr></table></figure>
<h3 id="运行-spring-could-服务"><a href="#运行-spring-could-服务" class="headerlink" title="运行 spring could 服务"></a>运行 spring could 服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./springcloud.sh</div></pre></td></tr></table></figure>
<h3 id="运行-web-服务"><a href="#运行-web-服务" class="headerlink" title="运行 web 服务"></a>运行 web 服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./copyall.sh</div></pre></td></tr></table></figure>
<h3 id="运行询价服务"><a href="#运行询价服务" class="headerlink" title="运行询价服务"></a>运行询价服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker service create --name=quotes-service --replicas=1 --network=micro_network eriklupander/quotes-service</div></pre></td></tr></table></figure>
<h3 id="访问验证"><a href="#访问验证" class="headerlink" title="访问验证"></a>访问验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">docker-machine ip swarm-manager-1</div><div class="line"></div><div class="line">192.168.99.100:6767/accounts/10000</div></pre></td></tr></table></figure>
<h2 id="服务监控"><a href="#服务监控" class="headerlink" title="服务监控"></a>服务监控</h2><h3 id="visualizer"><a href="#visualizer" class="headerlink" title="visualizer"></a>visualizer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">docker service create \</div><div class="line">  --name=viz \</div><div class="line">  --publish=8080:8080/tcp \</div><div class="line">  --constraint=node.role==manager \</div><div class="line">  --mount=type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \</div><div class="line">  dockersamples/visualizer</div></pre></td></tr></table></figure>
<p>访问:192.168.99.100:8080</p>
<h3 id="dvizz"><a href="#dvizz" class="headerlink" title="dvizz"></a>dvizz</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">docker service create \</div><div class="line">   --constraint node.role==manager \</div><div class="line">   --replicas 1 --name dvizz -p 6969:6969 \</div><div class="line">   --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \</div><div class="line">   --network my_network \</div><div class="line">   eriklupander/dvizz</div></pre></td></tr></table></figure>
<p>访问:192.168.99.100:6969</p>
<h2 id="服务发现与负载均衡"><a href="#服务发现与负载均衡" class="headerlink" title="服务发现与负载均衡"></a>服务发现与负载均衡</h2><h3 id="docker-服务缩放"><a href="#docker-服务缩放" class="headerlink" title="docker 服务缩放"></a>docker 服务缩放</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker service scale accountservice=3</div></pre></td></tr></table></figure>
<h2 id="springcould-config-集中配置"><a href="#springcould-config-集中配置" class="headerlink" title="springcould config 集中配置"></a>springcould config 集中配置</h2><h3 id="依赖-rabbitmq"><a href="#依赖-rabbitmq" class="headerlink" title="依赖 rabbitmq"></a>依赖 rabbitmq</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line"># RabbitMQ</div><div class="line">docker service rm rabbitmq</div><div class="line">docker build -t shihp/rabbitmq ./</div><div class="line">docker service create --name=rabbitmq --replicas=1 --network=my_network -p 1883:1883 -p 5672:5672 -p 15672:15672 shihp/rabbitmq</div></pre></td></tr></table></figure>
<h3 id="依赖-viper-动态配置"><a href="#依赖-viper-动态配置" class="headerlink" title="依赖 viper 动态配置"></a>依赖 viper 动态配置</h3><h3 id="spring-could-config"><a href="#spring-could-config" class="headerlink" title="spring-could-config"></a>spring-could-config</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line"># Config Server</div><div class="line">cd support/config-server</div><div class="line">./gradlew build</div><div class="line">cd ../..</div><div class="line">docker build -t shihp/configserver support/config-server/</div><div class="line">docker service rm configserver</div><div class="line">docker service create --replicas 1 --name configserver -p 8888:8888 --network my_network --update-delay 10s --with-registry-auth  --update-parallelism 1 shihp/configserver</div></pre></td></tr></table></figure>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://192.168.99.100:8888/accountservice/dev/master</div></pre></td></tr></table></figure>
<h3 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h3><h2 id="services"><a href="#services" class="headerlink" title="services"></a>services</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># docker service 服务监控</div><div class="line">dvizz</div><div class="line"></div><div class="line"># go web 服务</div><div class="line">accountservice</div><div class="line"></div><div class="line"># java 微服务</div><div class="line">quotes-service</div><div class="line"></div><div class="line"># spring could config 服务 依赖</div><div class="line">rabbitmq</div><div class="line"></div><div class="line"># spring could config 服务</div><div class="line">configserver</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;go微服务实践(docker swarm 版本…)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>搭建 thrift  PHP 环境</title>
    <link href="https://shihp.github.io/2018/07/04/%E8%BF%90%E7%BB%B4/%E6%90%AD%E5%BB%BA%20thrift%20%20PHP%20%E7%8E%AF%E5%A2%83/"/>
    <id>https://shihp.github.io/2018/07/04/运维/搭建 thrift  PHP 环境/</id>
    <published>2018-07-04T10:20:44.000Z</published>
    <updated>2018-07-04T08:31:10.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建-thrift-PHP-环境"><a href="#搭建-thrift-PHP-环境" class="headerlink" title="搭建 thrift  PHP 环境"></a>搭建 thrift  PHP 环境</h1><hr>
<blockquote>
<p>php 使用 thrift 链接 hbase</p>
</blockquote>
<a id="more"></a>
<h2 id="编译安装-thrift"><a href="#编译安装-thrift" class="headerlink" title="编译安装 thrift"></a>编译安装 thrift</h2><p><a href="https://thrift.apache.org/docs/BuildingFromSource" target="_blank" rel="external">中文说明</a></p>
<h2 id="编译-php-扩展"><a href="#编译-php-扩展" class="headerlink" title="编译 php 扩展"></a>编译 php 扩展</h2><p>地址 <code>thrift-0.11.0/lib/php/src/ext/thrift_protocol</code></p>
<h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p><a href="https://github.com/shihp/php-hbase" target="_blank" rel="external">使用示例</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建-thrift-PHP-环境&quot;&gt;&lt;a href=&quot;#搭建-thrift-PHP-环境&quot; class=&quot;headerlink&quot; title=&quot;搭建 thrift  PHP 环境&quot;&gt;&lt;/a&gt;搭建 thrift  PHP 环境&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;php 使用 thrift 链接 hbase&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="thrift" scheme="https://shihp.github.io/tags/thrift/"/>
    
  </entry>
  
  <entry>
    <title>搭建 hbase 单机环境</title>
    <link href="https://shihp.github.io/2018/07/04/%E8%BF%90%E7%BB%B4/%E6%90%AD%E5%BB%BA%20hbase%20%E5%8D%95%E6%9C%BA%E7%8E%AF%E5%A2%83/"/>
    <id>https://shihp.github.io/2018/07/04/运维/搭建 hbase 单机环境/</id>
    <published>2018-07-04T10:20:44.000Z</published>
    <updated>2018-07-04T08:31:42.102Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建-hbase-单机环境"><a href="#搭建-hbase-单机环境" class="headerlink" title="搭建 hbase 单机环境"></a>搭建 hbase 单机环境</h1><blockquote>
<p>hbase 单机测试搭建</p>
</blockquote>
<a id="more"></a>
<p><a href="http://abloz.com/hbase/book.html#preface" target="_blank" rel="external">中文指南</a></p>
<p><a href="http://www.apache.org/dyn/closer.cgi/hbase/" target="_blank" rel="external">软件地址</a></p>
<blockquote>
<p>其中 bin 为可执行软件包,解压之后即可使用</p>
</blockquote>
<h2 id="安装依赖-java-配置-JAVA-HOME"><a href="#安装依赖-java-配置-JAVA-HOME" class="headerlink" title="安装依赖 java , 配置 JAVA_HOME ,"></a>安装依赖 java , 配置 JAVA_HOME ,</h2><p>yum  安装的 java_home 地址在<br><code>export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.171-8.b10.el7_5.x86_64</code></p>
<p>配置地址在<code>conf/hbase-env.sh</code></p>
<h2 id="thrift-server"><a href="#thrift-server" class="headerlink" title="thrift server"></a>thrift server</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./bin/hbase thrift start</div></pre></td></tr></table></figure>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">hbase(main):003:0&gt; create &apos;test&apos;, &apos;cf&apos;</div><div class="line">0 row(s) in 1.2200 seconds</div><div class="line">hbase(main):003:0&gt; list &apos;table&apos;</div><div class="line">test</div><div class="line">1 row(s) in 0.0550 seconds</div><div class="line">hbase(main):004:0&gt; put &apos;test&apos;, &apos;row1&apos;, &apos;cf:a&apos;, &apos;value1&apos;</div><div class="line">0 row(s) in 0.0560 seconds</div><div class="line">hbase(main):005:0&gt; put &apos;test&apos;, &apos;row2&apos;, &apos;cf:b&apos;, &apos;value2&apos;</div><div class="line">0 row(s) in 0.0370 seconds</div><div class="line">hbase(main):006:0&gt; put &apos;test&apos;, &apos;row3&apos;, &apos;cf:c&apos;, &apos;value3&apos;</div><div class="line">0 row(s) in 0.0450 seconds</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建-hbase-单机环境&quot;&gt;&lt;a href=&quot;#搭建-hbase-单机环境&quot; class=&quot;headerlink&quot; title=&quot;搭建 hbase 单机环境&quot;&gt;&lt;/a&gt;搭建 hbase 单机环境&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;hbase 单机测试搭建&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="hbase" scheme="https://shihp.github.io/tags/hbase/"/>
    
  </entry>
  
  <entry>
    <title>go 微服务实践</title>
    <link href="https://shihp.github.io/2018/06/25/go/go%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5/"/>
    <id>https://shihp.github.io/2018/06/25/go/go 微服务实践/</id>
    <published>2018-06-25T12:20:44.000Z</published>
    <updated>2018-07-04T08:35:59.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="go-微服务实践"><a href="#go-微服务实践" class="headerlink" title="go 微服务实践"></a>go 微服务实践</h1><hr>
<blockquote>
<p>按照 <a href="https://segmentfault.com/a/1190000014894854" target="_blank" rel="external">博文</a> 使用 go 搭建微服务系统</p>
</blockquote>
<a id="more"></a>
<h2 id="编写-web-服务"><a href="#编写-web-服务" class="headerlink" title="编写 web 服务"></a>编写 web 服务</h2><h2 id="docker-化-http-服务"><a href="#docker-化-http-服务" class="headerlink" title="docker 化 http 服务"></a>docker 化 http 服务</h2><p>编译服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">export GOOS=linux</div><div class="line">go build -o accountservice-linux-amd64</div><div class="line">export GOOS=darwin</div></pre></td></tr></table></figure></p>
<p>docker file<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#docke file 文件</div><div class="line">FROM iron/base</div><div class="line"></div><div class="line">EXPOSE 6767</div><div class="line">ADD accountservice-linux-amd64 /</div><div class="line">ENTRYPOINT [&quot;./accountservice-linux-amd64&quot;]</div></pre></td></tr></table></figure></p>
<p>build 镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">build -t  shihp/accountservice micro-account-service/</div></pre></td></tr></table></figure></p>
<p>启动镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">docker container run --rm -p 8000:6767 -it shihp/micro-account-service</div><div class="line"></div><div class="line">http://127.0.0.1:8000/accounts/10000</div></pre></td></tr></table></figure></p>
<h2 id="docker-swarm-环境"><a href="#docker-swarm-环境" class="headerlink" title="docker swarm 环境"></a>docker swarm 环境</h2><h3 id="创建-machine"><a href="#创建-machine" class="headerlink" title="创建 machine"></a>创建 machine</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker-machine create swarm-manager-1</div></pre></td></tr></table></figure>
<h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">boot2docker</div><div class="line">#下载地址</div><div class="line">https://github.com/boot2docker/boot2docker/releases/download/v18.05.0-ce/boot2docker.iso</div><div class="line">#本机位置</div><div class="line">mv boot2docker.iso /Users/shihuipeng/.docker/machine/cache/</div></pre></td></tr></table></figure>
<h3 id="创建docker-machine"><a href="#创建docker-machine" class="headerlink" title="创建docker-machine"></a>创建docker-machine</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">docker $(docker-machine config swarm-manager-1) swarm init --advertise-addr $(docker-machine ip swarm-manager-1)</div><div class="line"></div><div class="line">#    docker swarm join --token SWMTKN-1-36hq2nob9yu6ftovlb5xso6u27zh73m8u7nr1cfcefeja1fsov-c6edidql4h1x5uwgn0lq8zzvq 192.168.99.100:2377</div><div class="line"></div><div class="line"># docker swarm join-token manager</div></pre></td></tr></table></figure>
<h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eval $(docker-machine env swarm-manager-1)</div></pre></td></tr></table></figure>
<h3 id="创建网络"><a href="#创建网络" class="headerlink" title="创建网络"></a>创建网络</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker network create --driver overlay my_network</div></pre></td></tr></table></figure>
<h3 id="运行web服务"><a href="#运行web服务" class="headerlink" title="运行web服务"></a>运行web服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker service create --name=accountservice --replicas=1 --network=my_network -p=6767:6767 shihp/accountservice</div></pre></td></tr></table></figure>
<h3 id="访问验证"><a href="#访问验证" class="headerlink" title="访问验证"></a>访问验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">docker-machine ip swarm-manager-1</div><div class="line"></div><div class="line">192.168.99.100:6767/accounts/10000</div></pre></td></tr></table></figure>
<h2 id="服务监控"><a href="#服务监控" class="headerlink" title="服务监控"></a>服务监控</h2><h3 id="visualizer"><a href="#visualizer" class="headerlink" title="visualizer"></a>visualizer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">docker service create \</div><div class="line">  --name=viz \</div><div class="line">  --publish=8080:8080/tcp \</div><div class="line">  --constraint=node.role==manager \</div><div class="line">  --mount=type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \</div><div class="line">  dockersamples/visualizer</div></pre></td></tr></table></figure>
<p>访问:192.168.99.100:8080</p>
<h3 id="dvizz"><a href="#dvizz" class="headerlink" title="dvizz"></a>dvizz</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">docker service create \</div><div class="line">   --constraint node.role==manager \</div><div class="line">   --replicas 1 --name dvizz -p 6969:6969 \</div><div class="line">   --mount type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock \</div><div class="line">   --network my_network \</div><div class="line">   eriklupander/dvizz</div></pre></td></tr></table></figure>
<p>访问:192.168.99.100:6969</p>
<h3 id="询价服务"><a href="#询价服务" class="headerlink" title="询价服务"></a>询价服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker service create --name=quotes-service --replicas=1 --network=my_network eriklupander/quotes-service</div></pre></td></tr></table></figure>
<h2 id="服务发现与负载均衡"><a href="#服务发现与负载均衡" class="headerlink" title="服务发现与负载均衡"></a>服务发现与负载均衡</h2><h3 id="docker-服务缩放"><a href="#docker-服务缩放" class="headerlink" title="docker 服务缩放"></a>docker 服务缩放</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker service scale accountservice=3</div></pre></td></tr></table></figure>
<h2 id="springcould-config-集中配置"><a href="#springcould-config-集中配置" class="headerlink" title="springcould config 集中配置"></a>springcould config 集中配置</h2><h3 id="依赖-rabbitmq"><a href="#依赖-rabbitmq" class="headerlink" title="依赖 rabbitmq"></a>依赖 rabbitmq</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line"># RabbitMQ</div><div class="line">docker service rm rabbitmq</div><div class="line">docker build -t shihp/rabbitmq ./</div><div class="line">docker service create --name=rabbitmq --replicas=1 --network=my_network -p 1883:1883 -p 5672:5672 -p 15672:15672 shihp/rabbitmq</div></pre></td></tr></table></figure>
<h3 id="依赖-viper-动态配置"><a href="#依赖-viper-动态配置" class="headerlink" title="依赖 viper 动态配置"></a>依赖 viper 动态配置</h3><h3 id="spring-could-config"><a href="#spring-could-config" class="headerlink" title="spring-could-config"></a>spring-could-config</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line"># Config Server</div><div class="line">cd support/config-server</div><div class="line">./gradlew build</div><div class="line">cd ../..</div><div class="line">docker build -t shihp/configserver support/config-server/</div><div class="line">docker service rm configserver</div><div class="line">docker service create --replicas 1 --name configserver -p 8888:8888 --network my_network --update-delay 10s --with-registry-auth  --update-parallelism 1 shihp/configserver</div></pre></td></tr></table></figure>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://192.168.99.100:8888/accountservice/dev/master</div></pre></td></tr></table></figure>
<h3 id="刷新"><a href="#刷新" class="headerlink" title="刷新"></a>刷新</h3><h2 id="services"><a href="#services" class="headerlink" title="services"></a>services</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># docker service 服务监控</div><div class="line">dvizz</div><div class="line"></div><div class="line"># go web 服务</div><div class="line">accountservice</div><div class="line"></div><div class="line"># java 微服务</div><div class="line">quotes-service</div><div class="line"></div><div class="line"># spring could config 服务 依赖</div><div class="line">rabbitmq</div><div class="line"></div><div class="line"># spring could config 服务</div><div class="line">configserver</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;go-微服务实践&quot;&gt;&lt;a href=&quot;#go-微服务实践&quot; class=&quot;headerlink&quot; title=&quot;go 微服务实践&quot;&gt;&lt;/a&gt;go 微服务实践&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;按照 &lt;a href=&quot;https://segmentfault.com/a/1190000014894854&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博文&lt;/a&gt; 使用 go 搭建微服务系统&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>gogs 应用部署</title>
    <link href="https://shihp.github.io/2018/04/27/go/gogs%20%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://shihp.github.io/2018/04/27/go/gogs 应用部署/</id>
    <published>2018-04-27T12:20:44.000Z</published>
    <updated>2018-04-28T05:50:14.275Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>一切以官网流程为主,本文档仅供一些概念细节参考</p>
</blockquote>
<a id="more"></a>
<h2 id="gogs-nginx部署-配置ssl模式"><a href="#gogs-nginx部署-配置ssl模式" class="headerlink" title="gogs nginx部署 配置ssl模式"></a>gogs nginx部署 配置ssl模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">        listen 443;</div><div class="line">        server_name domain; #填写绑定证书的域名</div><div class="line">        ssl on;</div><div class="line">        ssl_certificate 1_domain_bundle.crt;</div><div class="line">        ssl_certificate_key 2_domain.key;</div><div class="line">        ssl_session_timeout 5m;</div><div class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</div><div class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</div><div class="line">        ssl_prefer_server_ciphers on;</div><div class="line">        location / &#123;</div><div class="line">            proxy_pass http://127.0.0.1:3000/;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">server &#123;</div><div class="line">        listen 80;</div><div class="line">        server_name domain; #填写绑定证书的域名</div><div class="line">        rewrite ^(.*) https://$server_name$1 permanent;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="gogs-custom-conf-app-ini最终生成的配置文件"><a href="#gogs-custom-conf-app-ini最终生成的配置文件" class="headerlink" title="gogs/custom/conf/app.ini最终生成的配置文件"></a>gogs/custom/conf/app.ini最终生成的配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">APP_NAME = Gogs</div><div class="line">RUN_USER = root</div><div class="line">RUN_MODE = prod</div><div class="line"></div><div class="line">[database]</div><div class="line">DB_TYPE  = mysql</div><div class="line">HOST     = 127.0.0.1:3306</div><div class="line">NAME     = gogs</div><div class="line">USER     = user</div><div class="line">PASSWD   = PASSWD</div><div class="line">SSL_MODE = disable</div><div class="line">PATH     = data/gogs.db</div><div class="line"></div><div class="line">[repository]</div><div class="line">ROOT = /data/code/gogs-repositories</div><div class="line"></div><div class="line">[server]</div><div class="line">DOMAIN           = domain</div><div class="line">HTTP_PORT        = 3000</div><div class="line">ROOT_URL         = https://domain/</div><div class="line">DISABLE_SSH      = false</div><div class="line">SSH_PORT         = 22</div><div class="line">START_SSH_SERVER = false</div><div class="line">OFFLINE_MODE     = false</div><div class="line"></div><div class="line">[mailer]</div><div class="line">ENABLED = true</div><div class="line">HOST    = smtp.qq.com:465</div><div class="line">FROM    = youmail.com</div><div class="line">USER    = youmail</div><div class="line">PASSWD  = password</div><div class="line"></div><div class="line">[service]</div><div class="line">REGISTER_EMAIL_CONFIRM = true</div><div class="line">ENABLE_NOTIFY_MAIL     = true</div><div class="line">DISABLE_REGISTRATION   = false</div><div class="line">ENABLE_CAPTCHA         = true</div><div class="line">REQUIRE_SIGNIN_VIEW    = true</div><div class="line"></div><div class="line">[picture]</div><div class="line">DISABLE_GRAVATAR        = false</div><div class="line">ENABLE_FEDERATED_AVATAR = false</div><div class="line"></div><div class="line">[session]</div><div class="line">PROVIDER = file</div><div class="line"></div><div class="line">[log]</div><div class="line">MODE      = file</div><div class="line">LEVEL     = Info</div><div class="line">ROOT_PATH = /data/code/gogs-log</div><div class="line"></div><div class="line">[security]</div><div class="line">INSTALL_LOCK = true</div><div class="line">SECRET_KEY   = KkDhwmNuazMIsr1</div></pre></td></tr></table></figure>
<h2 id="一些细节"><a href="#一些细节" class="headerlink" title="一些细节"></a>一些细节</h2><h3 id="关于运行用户选择"><a href="#关于运行用户选择" class="headerlink" title="关于运行用户选择"></a>关于运行用户选择</h3><p>官方推荐使用一个新的 gogs 用户来创建,我是使用 go 源码安装的,这块新创建用户,配置运行权限,之类的感觉很麻烦<br>然后,我使用了日常的服务器账号(shihp)来作为运行的账户, 结果导致安装之后,我 ssh 登录不上…<br>后来使用 root 来作为运行账户,暂时没遇到其他问题</p>
<h3 id="关于-mysql8的问题"><a href="#关于-mysql8的问题" class="headerlink" title="关于 mysql8的问题"></a>关于 mysql8的问题</h3><p>这个已经有很多帖子了,赘述下<br>vim /etc/my.cnf 追加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">default-authentication-plugin = mysql_native_password</div></pre></td></tr></table></figure></p>
<p>应该最好的方案还是升级/配置安全插件,不过有点麻烦,就算了.</p>
<p><code>有其他问题欢迎留言</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一切以官网流程为主,本文档仅供一些概念细节参考&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go 微服务实践 consul</title>
    <link href="https://shihp.github.io/2018/04/25/go/go%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5%20consul/"/>
    <id>https://shihp.github.io/2018/04/25/go/go 微服务实践 consul/</id>
    <published>2018-04-25T12:20:44.000Z</published>
    <updated>2018-04-28T03:31:13.987Z</updated>
    
    <content type="html"><![CDATA[<p>服务注册/发现 consul</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo yum install bind-utils</div></pre></td></tr></table></figure>
<p>安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wget https://releases.hashicorp.com/consul/1.0.7/consul_1.0.7_freebsd_amd64.zip</div><div class="line"></div><div class="line">unzip consul_1.0.7_freebsd_amd64.zip</div><div class="line"></div><div class="line">cp consul /usr/local/bin</div></pre></td></tr></table></figure></p>
<p>启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">consul agent -dev -node shihp</div></pre></td></tr></table></figure></p>
<p>辅助工具<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">yum install bind-utils</div><div class="line"></div><div class="line">history | grep dig | grep -v grep  | awk &apos;&#123;print $2 &quot; &quot; $3 &quot; &quot; $4 &quot; &quot; $5 &quot; &quot; $6 &quot; &quot; $7 &quot; &quot; $8&#125;&apos;</div></pre></td></tr></table></figure></p>
<p>查看<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl localhost:8500/v1/catalog/nodes</div><div class="line">consul members</div><div class="line">dig @127.0.0.1 -p 8600 hello-world.node.consul</div></pre></td></tr></table></figure></p>
<p>注册服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /etc/consul.d</div><div class="line"></div><div class="line">echo &apos;&#123;&quot;service&quot;: &#123;&quot;name&quot;: &quot;web&quot;, &quot;tags&quot;: [&quot;rails&quot;], &quot;port&quot;: 80&#125;&#125;&apos; \</div><div class="line">    | sudo tee /etc/consul.d/web.json</div><div class="line"></div><div class="line">consul agent -dev -node shihp  -config-dir=/etc/consul.d</div></pre></td></tr></table></figure></p>
<p>检查服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">dig @127.0.0.1 -p 8600 web.service.consul</div><div class="line">dig @127.0.0.1 -p 8600 web.service.consul</div><div class="line">dig @127.0.0.1 -p 8600 web.service.consul SRV</div><div class="line">dig @127.0.0.1 -p 8600 rails.web.service.consul</div><div class="line"></div><div class="line">curl http://localhost:8500/v1/catalog/service/web</div><div class="line">curl http://localhost:8500/v1/health/service/web?passing</div></pre></td></tr></table></figure>
<p>创建集群<br><a href="https://github.com/hashicorp/consul/blob/master/demo/vagrant-cluster/Vagrantfile]" target="_blank" rel="external">Vagrantfile</a><br>n1服务器one server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">consul agent -server -bootstrap-expect=1 \</div><div class="line">    -data-dir=/tmp/consul -node=agent-one -bind=172.20.20.10 \</div><div class="line">    -enable-script-checks=true -config-dir=/etc/consul.d</div></pre></td></tr></table></figure></p>
<p>n2服务器one client.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">consul agent -data-dir=/tmp/consul -node=agent-two \</div><div class="line">    -bind=172.20.20.11 -enable-script-checks=true -config-dir=/etc/consul.d</div></pre></td></tr></table></figure></p>
<p>建立集群<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vagrant ssh n1</div><div class="line">consul join 172.20.20.11</div><div class="line">consul members</div></pre></td></tr></table></figure></p>
<p>自动集群建立Auto-joining a Cluster on Start (todo)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Using a DNS entry</div><div class="line">$ consul agent -retry-join &quot;consul.domain.internal&quot;</div><div class="line"># Using IPv4</div><div class="line">$ consul agent -retry-join &quot;10.0.4.67&quot;</div><div class="line"># Using IPv6</div><div class="line">$ consul agent -retry-join &quot;[::1]:8301&quot;</div><div class="line"># Using Cloud Auto-Joining</div><div class="line">$ consul agent -retry-join &quot;provider=aws tag_key=...&quot;</div></pre></td></tr></table></figure></p>
<p>集群健康检查</p>
<p>ping 检查<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">echo &apos;&#123;&quot;check&quot;: &#123;&quot;name&quot;: &quot;ping&quot;,</div><div class="line"> &quot;args&quot;: [&quot;ping&quot;, &quot;-c1&quot;, &quot;google.com&quot;], &quot;interval&quot;: &quot;30s&quot;&#125;&#125;&apos; \</div><div class="line"> &gt;/etc/consul.d/ping.json</div></pre></td></tr></table></figure></p>
<p>web 检查<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">echo &apos;&#123;&quot;service&quot;: &#123;&quot;name&quot;: &quot;web&quot;, &quot;tags&quot;: [&quot;rails&quot;], &quot;port&quot;: 80,</div><div class="line">  &quot;check&quot;: &#123;&quot;args&quot;: [&quot;curl&quot;, &quot;localhost&quot;], &quot;interval&quot;: &quot;10s&quot;&#125;&#125;&#125;&apos; \</div><div class="line">  &gt;/etc/consul.d/web.json</div></pre></td></tr></table></figure></p>
<p>加载配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">consul reload</div></pre></td></tr></table></figure></p>
<p>健康检查<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl http://localhost:8500/v1/health/state/critical</div></pre></td></tr></table></figure></p>
<p>web ui (todo)</p>
<p><a href="https://www.consul.io/intro/getting-started/next-steps.html" target="_blank" rel="external">next</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务注册/发现 consul&lt;/p&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>beego 部署方案</title>
    <link href="https://shihp.github.io/2018/04/18/go/beego%20%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    <id>https://shihp.github.io/2018/04/18/go/beego 应用部署/</id>
    <published>2018-04-18T12:20:44.000Z</published>
    <updated>2018-04-28T03:31:17.435Z</updated>
    
    <content type="html"><![CDATA[<hr>
<blockquote>
<p>因为在使用 beego 的时候,看官方文档,有些地方文档写的不够清楚,自己尝试了部署了下,然后将结果分享给大家,作为官方文档的辅助</p>
</blockquote>
<a id="more"></a>
<h2 id="前置工作"><a href="#前置工作" class="headerlink" title="前置工作"></a>前置工作</h2><ol>
<li>需要一个可以编译成功的 go 应用(简单点的话 可以直接 bee api {beeapi} 生成一份 api 的项目)</li>
<li>编译 <code>go build</code></li>
</ol>
<h2 id="配置部署目录"><a href="#配置部署目录" class="headerlink" title="配置部署目录"></a>配置部署目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mkdir /data/project/release/beego-hello</div><div class="line">cp beeapi /data/project/release/beego-hello/</div><div class="line">cp -fr conf /opt/app/beepkg</div><div class="line"></div><div class="line">//api 项目没有这两个文件夹,忽略即可</div><div class="line">cp -fr views /opt/app/beepkg</div><div class="line">cp -fr static /opt/app/beepkg</div></pre></td></tr></table></figure>
<h2 id="独立部署模式-将-go-应用启动"><a href="#独立部署模式-将-go-应用启动" class="headerlink" title="独立部署模式,将 go 应用启动"></a>独立部署模式,将 go 应用启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup  ./beeapi  &amp;&gt;&gt; beeapi.log &amp;</div></pre></td></tr></table></figure>
<h2 id="配置-nginx"><a href="#配置-nginx" class="headerlink" title="配置 nginx"></a>配置 nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  beego.com;</div><div class="line"></div><div class="line">    charset utf-8;</div><div class="line">    access_log  /data/project/release/beego-hello/beego.com.access.log;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        try_files /_not_exists_ @backend;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location @backend &#123;</div><div class="line">        proxy_set_header X-Forwarded-For $remote_addr;</div><div class="line">        proxy_set_header Host            $http_host;</div><div class="line"></div><div class="line">        proxy_pass http://127.0.0.1:8080;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  beego-admin.com;</div><div class="line"></div><div class="line">    charset utf-8;</div><div class="line">    access_log  /data/project/release/beego-hello/beego-admin.com.access.log;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        try_files /_not_exists_ @backend;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location @backend &#123;</div><div class="line">        proxy_set_header X-Forwarded-For $remote_addr;</div><div class="line">        proxy_set_header Host            $http_host;</div><div class="line"></div><div class="line">        proxy_pass http://127.0.0.1:8088;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><h3 id="配置域名映射"><a href="#配置域名映射" class="headerlink" title="配置域名映射"></a>配置域名映射</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">127.0.0.1 beego.com</div></pre></td></tr></table></figure>
<h3 id="压测"><a href="#压测" class="headerlink" title="压测"></a>压测</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ab -n100000 -c200 http://beego.com/v1/object</div></pre></td></tr></table></figure>
<p><code>go 原生应用压测时候,,平均在120~170us 左右,没有 dump 过</code><br><code>nginx,平均30~50us, 但是会 dump, 不稳定</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;因为在使用 beego 的时候,看官方文档,有些地方文档写的不够清楚,自己尝试了部署了下,然后将结果分享给大家,作为官方文档的辅助&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="go" scheme="https://shihp.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks 下 在 终端 使用 privoxy Over the wall</title>
    <link href="https://shihp.github.io/2018/04/02/efficient/privoxy%20over%20the%20wall%20in%20terminal/"/>
    <id>https://shihp.github.io/2018/04/02/efficient/privoxy over the wall in terminal/</id>
    <published>2018-04-02T10:20:44.000Z</published>
    <updated>2018-04-02T13:10:11.937Z</updated>
    
    <content type="html"><![CDATA[<!-- # shadowsocks 下 在 终端 使用 privoxy Over the wall -->
<hr>
<h2 id="安装-privoxy"><a href="#安装-privoxy" class="headerlink" title="安装 privoxy"></a>安装 privoxy</h2><p>brew install privoxy</p>
<h2 id="配置-privoxy"><a href="#配置-privoxy" class="headerlink" title="配置 privoxy"></a>配置 privoxy</h2><h3 id="查看-代理使用的-ip"><a href="#查看-代理使用的-ip" class="headerlink" title="查看 代理使用的 ip"></a>查看 代理使用的 ip</h3><p>vim ~/.ShadowsocksX/gfwlist.js</p>
 <a id="more"></a>
<h3 id="文件末尾添加配置"><a href="#文件末尾添加配置" class="headerlink" title="文件末尾添加配置"></a>文件末尾添加配置</h3><p>vim /usr/local/etc/privoxy/config<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">listen-address 0.0.0.0:8118</div><div class="line">forward-socks5 / localhost:1080.</div></pre></td></tr></table></figure></p>
<h3 id="启用配置"><a href="#启用配置" class="headerlink" title="启用配置"></a>启用配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo /usr/local/sbin/privoxy /usr/local/etc/privoxy/config</div><div class="line">export http_proxy=&apos;http://localhost:8118&apos;</div><div class="line">export https_proxy=&apos;http://localhost:8118&apos;</div></pre></td></tr></table></figure>
<h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><p>curl ip.cn</p>
<h2 id="设置快捷方式"><a href="#设置快捷方式" class="headerlink" title="设置快捷方式"></a>设置快捷方式</h2><h3 id="修改bashrc"><a href="#修改bashrc" class="headerlink" title="修改bashrc"></a>修改bashrc</h3><p>vim ~/.bashrc</p>
<h3 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">alias ss=&quot;export http_proxy=&apos;http://localhost:8118&apos; &amp;&amp;  export https_proxy=&apos;http://localhost:8118&apos;&quot;</div><div class="line">alias ssd=&quot;unset http_proxy &amp;&amp; unset https_proxy&quot;</div></pre></td></tr></table></figure>
<h3 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">source~/.bashrc</div></pre></td></tr></table></figure>
<h3 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ss</div><div class="line">ssd</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;!-- # shadowsocks 下 在 终端 使用 privoxy Over the wall --&gt;
&lt;hr&gt;
&lt;h2 id=&quot;安装-privoxy&quot;&gt;&lt;a href=&quot;#安装-privoxy&quot; class=&quot;headerlink&quot; title=&quot;安装 privoxy&quot;&gt;&lt;/a&gt;安装 privoxy&lt;/h2&gt;&lt;p&gt;brew install privoxy&lt;/p&gt;
&lt;h2 id=&quot;配置-privoxy&quot;&gt;&lt;a href=&quot;#配置-privoxy&quot; class=&quot;headerlink&quot; title=&quot;配置 privoxy&quot;&gt;&lt;/a&gt;配置 privoxy&lt;/h2&gt;&lt;h3 id=&quot;查看-代理使用的-ip&quot;&gt;&lt;a href=&quot;#查看-代理使用的-ip&quot; class=&quot;headerlink&quot; title=&quot;查看 代理使用的 ip&quot;&gt;&lt;/a&gt;查看 代理使用的 ip&lt;/h3&gt;&lt;p&gt;vim ~/.ShadowsocksX/gfwlist.js&lt;/p&gt;
    
    </summary>
    
    
      <category term="shadowsocks privoxy" scheme="https://shihp.github.io/tags/shadowsocks-privoxy/"/>
    
  </entry>
  
  <entry>
    <title>phalcon model save 使用</title>
    <link href="https://shihp.github.io/2018/02/23/php/phalcon-model%20save%20%E4%BD%BF%E7%94%A8/"/>
    <id>https://shihp.github.io/2018/02/23/php/phalcon-model save 使用/</id>
    <published>2018-02-23T15:20:44.000Z</published>
    <updated>2018-02-23T15:09:14.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="phalcon-model-使用-save-报错"><a href="#phalcon-model-使用-save-报错" class="headerlink" title="phalcon model 使用 save 报错"></a>phalcon model 使用 save 报错</h1><blockquote>
<p>phalcon-model  使用 save方法时候,如果先进行查询,<br>查询结果方法里面含有字段 source ,会替换掉目标表的名字</p>
</blockquote>
<a id="more"></a>
<h2 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h2><p>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$UserDemoteModel = self::findFirst([&quot;user_id=&#123;$userId&#125;&quot;]);</div><div class="line">$UserDemoteModel-&gt;level  = 1;</div><div class="line">$UserDemoteModel-&gt;save();</div></pre></td></tr></table></figure></p>
<p>上述代码执行错误信息如下:</p>
<p><code>phalcon Table &#39;1&#39; doesn&#39;t exist in database when dumping meta-data for Model\\***</code></p>
<p>原因分析:</p>
<p>phalcon-model  使用 save方法时候,如果先进行查询,<br>查询结果方法里面含有字段 source ,会替换掉目标表的名字</p>
<p>调了有些时间,快速查询查询优化手段:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$this-&gt;getMessages();</div></pre></td></tr></table></figure></p>
<p>可以看到错误信息,不过不是很完整,类似 <code>source is requier</code></p>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$UserDemoteModel-&gt;getTargetTable();</div></pre></td></tr></table></figure>
<p>看到你目标表 为 <code>1</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;phalcon-model-使用-save-报错&quot;&gt;&lt;a href=&quot;#phalcon-model-使用-save-报错&quot; class=&quot;headerlink&quot; title=&quot;phalcon model 使用 save 报错&quot;&gt;&lt;/a&gt;phalcon model 使用 save 报错&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;phalcon-model  使用 save方法时候,如果先进行查询,&lt;br&gt;查询结果方法里面含有字段 source ,会替换掉目标表的名字&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://shihp.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>shell 实现php 脚本动态扩展</title>
    <link href="https://shihp.github.io/2018/02/09/%E8%BF%90%E7%BB%B4/shell%20%E5%AE%9E%E7%8E%B0php%20%E8%84%9A%E6%9C%AC%E5%8A%A8%E6%80%81%E6%89%A9%E5%B1%95/"/>
    <id>https://shihp.github.io/2018/02/09/运维/shell 实现php 脚本动态扩展/</id>
    <published>2018-02-09T10:20:44.000Z</published>
    <updated>2018-02-09T09:28:59.181Z</updated>
    
    <content type="html"><![CDATA[<p>shell 通过 服务器可容纳的task数,以及总的需要执行的任务数 动态分配服务脚本<br><a id="more"></a></p>
<p>usage <code>sh test.sh 100 1500000</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line"></div><div class="line"># shell 通过 服务器可容纳的task数,以及总的需要执行的任务数 动态分配服务脚本</div><div class="line"></div><div class="line"># task 参数 1: 后台启动的 task 数量</div><div class="line"># user_count 参数 2: 需要处理的总的任务量</div><div class="line"></div><div class="line">int=1</div><div class="line"></div><div class="line">task=$1</div><div class="line">user_count=$2</div><div class="line"></div><div class="line">task_deal_user=`expr $&#123;user_count&#125; / $&#123;task&#125;`</div><div class="line">do_task_deal_user=`expr $&#123;task_deal_user&#125; + 1`</div><div class="line"></div><div class="line">while(( $int&lt;=$&#123;task&#125; ))</div><div class="line">do</div><div class="line">    start=`expr $&#123;int&#125; - 1`</div><div class="line">    start2=`expr $&#123;start&#125;  \* $&#123;do_task_deal_user&#125;`</div><div class="line">    end=`expr $&#123;int&#125; \* $&#123;do_task_deal_user&#125;`</div><div class="line">    echo &quot;$&#123;start2&#125; *** $&#123;start2&#125;&quot;</div><div class="line">#    nohup php /data/project/vip/task/cli.php task main $&#123;start2&#125;,$&#123;end&#125; &quot;&gt;&quot; 100 &amp;&gt;/dev/null &amp;</div><div class="line">    str=&quot;nohup php /data/project/vip/task/cli.php task main $start2,$end &gt; 100 &amp;&gt;/dev/null &amp;&quot;</div><div class="line">    echo $&#123;str&#125;</div><div class="line">    let &quot;int++&quot;</div><div class="line">    sleep 1</div><div class="line">done</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;shell 通过 服务器可容纳的task数,以及总的需要执行的任务数 动态分配服务脚本&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://shihp.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>phalcon 多数据源 model 封装</title>
    <link href="https://shihp.github.io/2018/02/01/php/phalcon-model-implement/"/>
    <id>https://shihp.github.io/2018/02/01/php/phalcon-model-implement/</id>
    <published>2018-02-01T10:20:44.000Z</published>
    <updated>2018-02-09T09:29:06.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>数据模型优化</p>
<ol>
<li>优化数据连接服务注册单例</li>
<li>优化数据连接选择单例</li>
<li>优化多库原子级别轮训</li>
<li><p>优化 redis轮训 key配置0侵入,自动创建,自动扩容</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">namespace Model;</div><div class="line"></div><div class="line">use Exception;</div><div class="line">use Lib\Logger\Adapter\Logger;</div><div class="line">use Phalcon\Db\Adapter\Pdo\Mysql;</div><div class="line">use Phalcon\DI;</div><div class="line">use Phalcon\Db;</div><div class="line">use Phalcon\Mvc\Model;</div><div class="line">use Lib\Extend\Cache\Redis;</div><div class="line"></div><div class="line">class BaseModel extends Model</div><div class="line">&#123;</div><div class="line"></div><div class="line">    private $dbSelectConn;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取多个结果集，返回一个二维数组</div><div class="line">     * @param string $sql</div><div class="line">     * @param array|null $bindParams</div><div class="line">     * @return array</div><div class="line">     * @throws \Exception</div><div class="line">     */</div><div class="line">    public function getRows(string $sql, array $bindParams = null):array</div><div class="line">    &#123;</div><div class="line">        if (empty($sql)) &#123;</div><div class="line">            throw new \Exception(&apos;sql异常:sql不能为空!&apos;);</div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            $connect = $this-&gt;getReadConnection();</div><div class="line">            $query = $connect-&gt;query($sql, $bindParams);</div><div class="line">            $query-&gt;setFetchMode(Db::FETCH_ASSOC);</div><div class="line">            $data = $query-&gt;fetchAll();</div><div class="line">        &#125; catch (\Exception $e) &#123;</div><div class="line">            $error = [&apos;code&apos; =&gt; $e-&gt;getCode(), &apos;msg&apos; =&gt; $e-&gt;getMessage(), &apos;file&apos; =&gt; $e-&gt;getFile(), &apos;line&apos; =&gt; $e-&gt;getLine()];</div><div class="line">            $error = json_encode($error);</div><div class="line">            throw new \Exception(&quot;sql异常:&#123;$error&#125;&quot;);</div><div class="line">        &#125;</div><div class="line">        return $data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 根据条件获取一条数据，返回一个一维数组</div><div class="line">     * @param string $sql</div><div class="line">     * @param array $bindParams</div><div class="line">     * @return array</div><div class="line">     * @throws \Exception</div><div class="line">     */</div><div class="line">    public function findOne(string $sql, array $bindParams = []):array</div><div class="line">    &#123;</div><div class="line">        if (empty($sql)) &#123;</div><div class="line">            throw new \Exception(&apos;sql异常:sql不能为空!&apos;);</div><div class="line">        &#125;</div><div class="line">        try &#123;</div><div class="line">            $connect = $this-&gt;getReadConnection();</div><div class="line">            $query = $connect-&gt;query($sql, $bindParams);</div><div class="line">            $query-&gt;setFetchMode(Db::FETCH_ASSOC);</div><div class="line">            $data = $query-&gt;fetchAll();</div><div class="line">        &#125; catch (\Exception $e) &#123;</div><div class="line">            $error = [&apos;code&apos; =&gt; $e-&gt;getCode(), &apos;msg&apos; =&gt; $e-&gt;getMessage(), &apos;file&apos; =&gt; $e-&gt;getFile(), &apos;line&apos; =&gt; $e-&gt;getLine()];</div><div class="line">            $error = json_encode($error);</div><div class="line">            throw new \Exception(&quot;sql异常:&#123;$error&#125;&quot;);</div><div class="line">        &#125;</div><div class="line">        return !empty($data) ? $data[0] : [];</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 基础db操作方法</div><div class="line">     * 支持新增.修改</div><div class="line">     *</div><div class="line">     * 新增</div><div class="line">     * $model 为 new Model()</div><div class="line">     * 修改</div><div class="line">     * $model 为 Model::findFirst(&quot;id=$id&quot;);</div><div class="line">     *</div><div class="line">     * @param $model UserModel</div><div class="line">     * @param $info</div><div class="line">     * @return mixed</div><div class="line">     */</div><div class="line">    public function baseSave($model, $info)</div><div class="line">    &#123;</div><div class="line">        try &#123;</div><div class="line">            foreach ($info as $_key =&gt; $_v) &#123;</div><div class="line">                $model-&gt;&#123;$_key&#125; = $_v;</div><div class="line">            &#125;</div><div class="line">            $rs = $model-&gt;save();</div><div class="line">            if ($rs === false) &#123;</div><div class="line">                var_dump($model-&gt;getMessages());</div><div class="line">                exit;</div><div class="line">            &#125;</div><div class="line">            return $rs;</div><div class="line">        &#125; catch (Exception $e) &#123;</div><div class="line">            Logger::errors(&apos;base save sql : &apos; . $e-&gt;getMessage());</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public function conn(string $db)</div><div class="line">    &#123;</div><div class="line"></div><div class="line">        $this-&gt;dbSelectConn = $this-&gt;getDI()-&gt;getShared(&apos;config&apos;)-&gt;database-&gt;db_select_conn;</div><div class="line">        /** @var object $conf */</div><div class="line">        $conf = $this-&gt;getDI()-&gt;getShared(&apos;config&apos;)-&gt;database-&gt;$db;</div><div class="line"></div><div class="line">        /** @var array $confArr */</div><div class="line">        $confArr = $conf-&gt;toArray();</div><div class="line">        /**</div><div class="line">         * 读写不分离的数据源配置 直接返回 数据 service</div><div class="line">         */</div><div class="line">        if (isset($confArr[&apos;read&apos;]) == false &amp;&amp; isset($confArr[&apos;write&apos;]) == false) &#123;</div><div class="line">            $dbServicePrefix = &apos;db_conn_&apos; . $db;</div><div class="line">            if($this-&gt;getDI()-&gt;has($dbServicePrefix) == false)&#123;</div><div class="line">                $this-&gt;getDI()-&gt;setShared($dbServicePrefix, function () use ($confArr) &#123;</div><div class="line">                    return new Mysql($confArr);</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">            $this-&gt;setConnectionService($dbServicePrefix);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 读库数据源设置</div><div class="line">         * /**</div><div class="line">         * db service 使用 key , 对应的是数据库配置的下标</div><div class="line">         * eg new_wd_read =&gt; 1  =&gt; rz  vip_read_1</div><div class="line">         */</div><div class="line">        if (isset($confArr[&apos;read&apos;])) &#123;</div><div class="line">            if (is_array(current($confArr[&apos;read&apos;])) == false) throw new \PDOException(&apos;请正确配置数据源&apos; . $db . &apos; 读库&apos;);</div><div class="line">            $dbServicePrefix    = $db.&quot;_read&quot;;</div><div class="line">            $this-&gt;dbSelect($dbServicePrefix, $confArr[&apos;read&apos;], $dbServicePrefix,&apos;read&apos;);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 写库数据源设置</div><div class="line">         */</div><div class="line">        if (isset($confArr[&apos;write&apos;])) &#123;</div><div class="line">            if (is_array(current($confArr[&apos;write&apos;])) == false) throw new \PDOException(&apos;请正确配置数据源&apos; . $db . &apos; 写库&apos;);</div><div class="line">            $dbServicePrefix   = $db.&quot;_write&quot;;</div><div class="line">            $this-&gt;dbSelect($dbServicePrefix, $confArr[&apos;write&apos;], $dbServicePrefix,&apos;write&apos;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 多库情况下 选择需要链接的数据库</div><div class="line">     * @param $db | 数据库</div><div class="line">     * @param $confArr</div><div class="line">     * @param $dbServicePrefix</div><div class="line">     * @param $type</div><div class="line">     * @internal param $db_conn_count | 数据库连接配置数据</div><div class="line">     */</div><div class="line">    private function dbSelect($db, $confArr, $dbServicePrefix, $type)</div><div class="line">    &#123;</div><div class="line">        $dbConnCount = count($confArr);</div><div class="line">        $serviceKey  = md5($dbServicePrefix);</div><div class="line"></div><div class="line">        if(isset($this-&gt;dbSelectConn[$db]) )&#123;</div><div class="line">            $this-&gt;registerService($serviceKey,$type);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        try&#123;</div><div class="line">            $rds = Redis::init()-&gt;incr(&apos;db_select_conn_&apos;.$db);</div><div class="line">            $key = $rds % $dbConnCount;</div><div class="line">            $this-&gt;dbSelectConn[$db] =  $key;</div><div class="line">            $this-&gt;setSharedService($confArr,$dbServicePrefix,$serviceKey);</div><div class="line">            $this-&gt;registerService($serviceKey,$type);</div><div class="line">        &#125;catch(Exception $e)&#123;</div><div class="line">            Logger::errors( $e-&gt;getMessage() );</div><div class="line">            $this-&gt;dbSelectConn[$db] = mt_rand(0,$dbConnCount - 1);</div><div class="line">            $this-&gt;setSharedService($confArr,$dbServicePrefix,$serviceKey);</div><div class="line">            $this-&gt;registerService($serviceKey,$type);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 配置数据服务</div><div class="line">     * @param $confArr</div><div class="line">     * @param $dbServicePrefix</div><div class="line">     * @param $serviceKey</div><div class="line">     */</div><div class="line">    private function setSharedService($confArr, $dbServicePrefix, $serviceKey)</div><div class="line">    &#123;</div><div class="line">        $confArrSet         = array_values($confArr);</div><div class="line">        $dbSelectConf       = $confArrSet[$this-&gt;dbSelectConn[$dbServicePrefix]];</div><div class="line">        $this-&gt;getDI()-&gt;setShared($serviceKey, function () use ($dbSelectConf) &#123;</div><div class="line">            return new Mysql($dbSelectConf);</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 设置数据连接</div><div class="line">     * @param $serviceKey</div><div class="line">     * @param $type</div><div class="line">     */</div><div class="line">    private function registerService($serviceKey, $type)</div><div class="line">    &#123;</div><div class="line">        if( $type == &apos;read&apos; )&#123;</div><div class="line">            $this-&gt;setReadConnectionService($serviceKey);</div><div class="line">        &#125;else&#123;</div><div class="line">            $this-&gt;setWriteConnectionService($serviceKey);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="配置config"><a href="#配置config" class="headerlink" title="配置config"></a>配置config</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">return [</div><div class="line">    &apos;db_select_conn&apos;	=&gt;	[],</div><div class="line"></div><div class="line">    &apos;w_database&apos; =&gt; [</div><div class="line">        &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">        &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">        &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">        &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">        &apos;dbname&apos;     	=&gt; &apos;rz_vip&apos;,</div><div class="line">        &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">    ],</div><div class="line"></div><div class="line">    &apos;rz_vip&apos; =&gt; [</div><div class="line">        &apos;read&apos;=&gt;[</div><div class="line">            &apos;vip_read_1&apos; =&gt; [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;rz_vip&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ],</div><div class="line">            &apos;vip_read_2&apos; =&gt; [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;rz_vip&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ],</div><div class="line">        ],</div><div class="line">        &apos;write&apos;=&gt;[</div><div class="line">            [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;rz_vip&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ]</div><div class="line">        ]</div><div class="line">    ],</div><div class="line"></div><div class="line">    &apos;new_wd&apos; =&gt; [</div><div class="line">        &apos;read&apos;=&gt;[</div><div class="line">            &apos;vip_read_1&apos; =&gt; [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;new_wd&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ],</div><div class="line">            &apos;vip_read_2&apos; =&gt; [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;new_wd&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ],</div><div class="line">        ],</div><div class="line">        &apos;write&apos;=&gt;[</div><div class="line">            [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;new_wd&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ],</div><div class="line">            [</div><div class="line">                &apos;adapter&apos;      	=&gt; &apos;Mysql&apos;,</div><div class="line">                &apos;host&apos;           	=&gt; &apos;127.0.0.1&apos;,</div><div class="line">                &apos;username&apos;  	=&gt; &apos;root&apos;,</div><div class="line">                &apos;password&apos;   	=&gt; &apos;&apos;,</div><div class="line">                &apos;dbname&apos;     	=&gt; &apos;new_wd&apos;,</div><div class="line">                &apos;port&apos;           	=&gt; &apos;4011&apos;</div><div class="line">            ]</div><div class="line">        ]</div><div class="line">    ],</div><div class="line">];</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;p&gt;数据模型优化&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;优化数据连接服务注册单例&lt;/li&gt;
&lt;li&gt;优化数据连接选择单例&lt;/li&gt;
&lt;li&gt;优化多库原子级别轮训&lt;/li&gt;
&lt;li&gt;&lt;p&gt;优化 redis轮训 key配置0侵入,自动创建,自动扩容&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="https://shihp.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>phalcon log date format</title>
    <link href="https://shihp.github.io/2018/01/01/php/phalcon-log-date-format/"/>
    <id>https://shihp.github.io/2018/01/01/php/phalcon-log-date-format/</id>
    <published>2018-01-01T10:20:44.000Z</published>
    <updated>2018-02-06T03:53:34.082Z</updated>
    
    <content type="html"><![CDATA[<p>#phalcon log date format</p>
<p>##phalcon 日志日期格式重写</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$loger = new File(&apos;/data/logs/test.log&apos;);</div><div class="line">$logDateFormat = new Line();</div><div class="line">$logDateFormat-&gt;setDateFormat(&apos;Y-m-d H:i:s&apos;);</div><div class="line">$loger-&gt;setFormatter($logDateFormat);</div><div class="line">$loger-&gt;alert(&apos;test &apos;.time());</div></pre></td></tr></table></figure>
<p>##日志注册到服务中</p>
<p>###设置 log handle</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">use Phalcon\Di;</div><div class="line"></div><div class="line">$di = new \Phalcon\DI\FactoryDefault();</div><div class="line">$di-&gt;setShared(&apos;loger&apos;, function () &#123;</div><div class="line">        $logRootPath = Di::getDefault()-&gt;get(&apos;config&apos;)-&gt;logger-&gt;log_root_path;</div><div class="line">        $date = \Common\Functions::date(1);</div><div class="line">        $filePath = $logRootPath . $date . DIRECTORY_SEPARATOR;</div><div class="line">        if (is_dir($filePath) === false) &#123;</div><div class="line">            mkdir($filePath, 0777, true);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $loger = new File($filePath . &apos;/hello.log&apos;);</div><div class="line">        $logDateFormat = new Line();</div><div class="line">        $logDateFormat-&gt;setDateFormat(&apos;Y-m-d H:i:s&apos;);</div><div class="line">        $loger-&gt;setFormatter($logDateFormat);</div><div class="line">        Di::getDefault()-&gt;set(&apos;logerInstance&apos;, $loger);</div><div class="line">        return $loger;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 用户级别日志捕获</div><div class="line">     */</div><div class="line">    set_error_handler(function ($errno, $errInfo, $errFile, $errLine) &#123;</div><div class="line">        Di::getDefault()-&gt;get(&apos;loger&apos;)-&gt;info(sprintf(&apos;%s %s %s&apos;, $errFile, $errLine, $errInfo));</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<h3 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">triggen_error( &apos;test&apos;.time() );</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#phalcon log date format&lt;/p&gt;
&lt;p&gt;##phalcon 日志日期格式重写&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;lin
    
    </summary>
    
    
      <category term="php" scheme="https://shihp.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>ELK6.0 KAFKA 搭建</title>
    <link href="https://shihp.github.io/2017/12/10/elk/ELK6.0%20KAFKA%20%E6%90%AD%E5%BB%BA/"/>
    <id>https://shihp.github.io/2017/12/10/elk/ELK6.0 KAFKA 搭建/</id>
    <published>2017-12-10T10:20:44.000Z</published>
    <updated>2018-02-06T06:23:49.544Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ELK6-0-KAFKA-搭建"><a href="#ELK6-0-KAFKA-搭建" class="headerlink" title="ELK6.0 KAFKA 搭建"></a>ELK6.0 KAFKA 搭建</h1><hr>
<p>[toc]</p>
<!-- >本次启用6.0.0版本搭建ELK -->
<!-- >公司网络的影响,所执行的安装包均为离线版本 -->
<h2 id="ELK"><a href="#ELK" class="headerlink" title="ELK"></a>ELK</h2><h3 id="下载-版本统一6-0-0"><a href="#下载-版本统一6-0-0" class="headerlink" title="下载(版本统一6.0.0):"></a>下载(版本统一6.0.0):</h3><p><a href="https://www.elastic.co/cn/downloads" target="_blank" rel="external">filebeat<br>elasticsearch<br>logstash<br>x-pack</a></p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p><code>因为公司信息安全原因 暂不提供 有需要的可以私聊我</code><br><a href="#tower#">elasticsearch.yml<br>kafka_test.conf<br>kibana.conf<br>kibana.yml<br>kibana-nginx.conf</a></p>
<h3 id="插件下载"><a href="#插件下载" class="headerlink" title="插件下载"></a>插件下载</h3><p><a href="https://github.com/logstash-plugins/logstash-input-kafka" target="_blank" rel="external">logstash-input-kafka</a></p>
<p>依赖关系:<br>ruby(&gt;2.0.0)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">sudo yum remove ruby ruby-devel</div><div class="line">sudo yum groupinstall &quot;Development Tools&quot;</div><div class="line">sudo yum install openssl-devel</div><div class="line">wget http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.2.tar.gz</div><div class="line">tar xvfvz ruby-2.1.2.tar.gz &amp;&amp; cd ruby-2.1.2</div><div class="line">./configure</div><div class="line">make &amp;&amp; make install</div><div class="line"></div><div class="line">-- upgrange</div><div class="line">sudo gem update --system</div><div class="line">sudo gem install bundler</div><div class="line"></div><div class="line">--check</div><div class="line">ruby --version</div><div class="line">rubygems --version</div></pre></td></tr></table></figure></p>
<p><a href="https://rvm.io/rvm/install" target="_blank" rel="external">rvm</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">\curl -sSL https://get.rvm.io | bash</div><div class="line">rvm install jruby-1.7.19</div><div class="line">rvm use jruby-1.7.19</div><div class="line">gem install bundler</div><div class="line">bundle install</div></pre></td></tr></table></figure></p>
<p>插件本地安装命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vim /root/logstash-6.0.0/Gemfile</div><div class="line">gem &quot;logstash-input-kafka&quot;, :path =&gt; &quot;/root/logstash-input-kafka-master&quot;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/root/logstash-6.0.0/bin/logstash-plugin update</div></pre></td></tr></table></figure>
<h3 id="命令配置"><a href="#命令配置" class="headerlink" title="命令配置"></a>命令配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"> vim ~/.bash_cmd </div><div class="line"> </div><div class="line">alias filebeat=&quot;nohup /root/filebeat-6.0.0-linux-x86_64/filebeat -e -c /root/filebeat-6.0.0-linux-x86_64/filebeat.yml -d &quot;publish&quot; &amp;&gt;&gt;/data/log/filebeat.log &amp;&quot;</div><div class="line">alias filebeat_kill=&quot;ps -ef | grep filebeat | grep -v grep | awk &apos;&#123;print $2&#125;&apos; | xargs kill&quot;</div><div class="line"></div><div class="line"></div><div class="line">alias kibana=&quot;nohup /root/kibana-6.0.0-linux-x86_64/bin/kibana &amp;&gt;&gt;/data/log/kibana.log &amp;&quot;</div><div class="line">alias kibana_kill=&quot;ps -ef | grep kibana | grep -v grep | awk &apos;&#123;print $2&#125;&apos; | xargs kill&quot;</div><div class="line"></div><div class="line">alias logstash_kafka=&quot;nohup /root/logstash-6.0.0/bin/logstash -f /root/logstash-6.0.0/config/kafka_test.conf  &amp;&gt;&gt;/data/log/logstash-kafka.log &amp;&quot;</div><div class="line">alias logstash_kafka_kill=&quot;ps -ef | grep kafka_test.conf | grep -v grep | awk &apos;&#123;print $2&#125;&apos; | xargs kill&quot;</div><div class="line"></div><div class="line">alias elastic=&quot;nohup /home/es/elasticsearch-6.0.0/bin/elasticsearch &amp;&gt;&gt;/data/log/elastic.log &amp;&quot;</div><div class="line">alias elastic_kill=&quot;ps -ef | grep elasticsearch | grep -v grep | awk &apos;&#123;print $2&#125;&apos; | xargs kill&quot;</div></pre></td></tr></table></figure>
<h2 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h2><h3 id="下载-1-0-0"><a href="#下载-1-0-0" class="headerlink" title="下载(1.0.0)"></a>下载(1.0.0)</h3><p><a href="https://kafka.apache.org/downloads" target="_blank" rel="external">kafka</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.java.net.UnknownHostException: test-185: test-185: 未知的名称或服务</div><div class="line">vim /etc/hosts </div><div class="line">添加: `10.1.1.1   test-185`</div></pre></td></tr></table></figure></p>
<h2 id="php-扩展"><a href="#php-扩展" class="headerlink" title="php 扩展"></a>php 扩展</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="http://pecl.php.net/" target="_blank" rel="external">rdkafka 3.0.5<br>zlib 1.2.7<br>zookeeper 0.4.0  (libzookeeper version    3.4.10)
</a></p>
<h2 id="composer-库依赖"><a href="#composer-库依赖" class="headerlink" title="composer 库依赖"></a>composer 库依赖</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;require-dev&quot;: &#123;</div><div class="line">        &quot;eaglewu/swoole-ide-helper&quot;: &quot;dev-master&quot;,</div><div class="line">        &quot;sneakybobito/phalcon-stubs&quot;: &quot;3.0.1&quot;,</div><div class="line">    &#125;,</div><div class="line">    &quot;require&quot;: &#123;</div><div class="line">        &quot;monolog/monolog&quot;: &quot;^1.23&quot;,</div><div class="line">        &quot;propel/propel&quot;: &quot;~2.0@dev&quot;,</div><div class="line">        &quot;kwn/php-rdkafka-stubs&quot;: &quot;^1.0&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ELK6-0-KAFKA-搭建&quot;&gt;&lt;a href=&quot;#ELK6-0-KAFKA-搭建&quot; class=&quot;headerlink&quot; title=&quot;ELK6.0 KAFKA 搭建&quot;&gt;&lt;/a&gt;ELK6.0 KAFKA 搭建&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;[toc]&lt;/p&gt;
&lt;!-
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>php-redis-cli</title>
    <link href="https://shihp.github.io/2017/05/16/redis/php-redis-cli/"/>
    <id>https://shihp.github.io/2017/05/16/redis/php-redis-cli/</id>
    <published>2017-05-16T14:20:44.000Z</published>
    <updated>2017-05-16T14:39:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>#php redis cli</p>
<p>##建立redis集群<br>最近公司的redis主从系统崩溃了，然后开始研究下redis的集群<br>redis的集群比较简单，或者说是redis官方目前提供的集群方案应非常成熟了：</p>
<p>建立集群：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">cd redis-3.2.8/utils/create-cluster/</div><div class="line"></div><div class="line">./create-cluster start</div><div class="line">./create-cluster create</div></pre></td></tr></table></figure></p>
<p>完成。<br>详细的redis集群搭建可以参考我的<a href="https://shihp.github.io/2017/05/05/redis/redis%E9%9B%86%E7%BE%A4/">另一篇博客</a>。</p>
<p>##phprediscli</p>
<ol>
<li>选择合适的<a href="https://redis.io/clients" target="_blank" rel="external">redis cli</a></li>
<li>以<a href="https://github.com/nrk/predis" target="_blank" rel="external">predis</a>为例<ol>
<li>从githup clone项目</li>
<li>通过composer解决项目加载 依赖 的问题 <code>composer install -vvv</code></li>
<li>代码实现</li>
</ol>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">include &apos;autoload.php&apos;;</div><div class="line"></div><div class="line">$parameters = [&apos;tcp://127.0.0.1:3000&apos;];</div><div class="line">$options = [&apos;cluster&apos; =&gt; &apos;redis&apos;];</div><div class="line"></div><div class="line">$client = new Predis\Client($parameters, $options);</div><div class="line"></div><div class="line">$time = explode(&apos; &apos;,microtime());</div><div class="line">$start = $time[1].substr($time[0],1);</div><div class="line">echo $start . PHP_EOL;</div><div class="line"></div><div class="line"></div><div class="line">for ($i = 0; $i &lt; 100000; $i++) &#123;</div><div class="line">    $key = mt_rand(1000000, 2000000);</div><div class="line">    $client-&gt;set(&apos;KEY&apos; . $key, &apos;VALUE:&apos; . $key);</div><div class="line">&#125;</div><div class="line"></div><div class="line">$client-&gt;quit();</div><div class="line">$time = explode(&apos; &apos;,microtime());</div><div class="line">$end = $time[1].substr($time[0],1);</div><div class="line">echo $end . PHP_EOL;</div><div class="line">echo &apos;一共耗时：&apos; .bcsub($end,$start,3);</div></pre></td></tr></table></figure>
<blockquote>
<p>在写入大概1000万数据后，开始出现的错误，因为我配置开aof。。<br>19276:M 16 May 15:36:28.060 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#php redis cli&lt;/p&gt;
&lt;p&gt;##建立redis集群&lt;br&gt;最近公司的redis主从系统崩溃了，然后开始研究下redis的集群&lt;br&gt;redis的集群比较简单，或者说是redis官方目前提供的集群方案应非常成熟了：&lt;/p&gt;
&lt;p&gt;建立集群：&lt;br&gt;&lt;figur
    
    </summary>
    
    
      <category term="redis" scheme="https://shihp.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>mysql优化</title>
    <link href="https://shihp.github.io/2017/05/12/mysql/sql%E4%BC%98%E5%8C%96/"/>
    <id>https://shihp.github.io/2017/05/12/mysql/sql优化/</id>
    <published>2017-05-12T10:40:44.000Z</published>
    <updated>2017-05-12T09:52:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>#mysql 优化策略</p>
<p>目前看到喜欢的mysql优化策略来自<a href="http://tech.meituan.com/mysql-index.html" target="_blank" rel="external">美团点评技术团队</a></p>
<p>防身的mysql优化策略：</p>
<ol>
<li><p>索引</p>
<ol>
<li><p>最<code>左前缀匹配</code>原则，非常重要的原则，mysql会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配，比如a = 1 and b = 2 and c &gt; 3 and d = 4 如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整。</p>
</li>
<li><p>=和in可以乱序，比如a = 1 and b = 2 and c = 3 建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式</p>
</li>
<li><p>尽量选择区分度高的列作为索引,区分度的公式是count(distinct col)/count(*)，表示字段不重复的比例，比例越大我们扫描的记录数越少，唯一键的区分度是1，而一些状态、性别字段可能在大数据面前区分度就是0，那可能有人会问，这个比例有什么经验值吗？使用场景不同，这个值也很难确定，一般需要join的字段我们都要求是0.1以上，即平均1条扫描10条记录</p>
</li>
<li>索引列不能参与计算，保持列“干净”，比如from_unixtime(create_time) = ’2014-05-29’就不能使用到索引，原因很简单，b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，显然成本太大。所以语句应该写成create_time = unix_timestamp(’2014-05-29’);</li>
<li>尽量的扩展索引，不要新建索引。比如表中已经有a的索引，现在要加(a,b)的索引，那么只需要修改原来的索引即可</li>
</ol>
</li>
<li><p>更省力的索引检查<br>还是<a href="https://github.com/Meituan-Dianping/SQLAdvisor" target="_blank" rel="external">美团点评技术团队</a>的case：</p>
</li>
</ol>
<p>用例如下，适合对mysql优化无力深入的。。。。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">./sqladvisor -h dev-be-mysql.co904fphklgb.ap-southeast-1.rds.amazonaws.com -P 3306 -u langapi -p &apos;!ang!iv*b*&apos; -d db_billing -q &quot;SELECT ca.tid, ca.pfid, ca.cash, ca.gold, ca.order_time, ca.status, ca.op_id, ca.op_time, ca.to_account, ch.name, ch.phone, ch.birthday, ch.address, ch.id_card_address, ch.id_card_img_0, ch.id_card_img_1, ch.bank_card_img, ch.bank_code, ch.bank_name, ch.email, ch.bank_branch_name, cr.company_id, cp.company AS company, ch.cashier_type, ch.op_id AS cashier_op_id FROM tb_cashier AS ca LEFT JOIN tb_cashier_hot AS ch ON ca.tid = ch.tid LEFT JOIN tb_company_relationship AS cr ON cr.pfid = ca.pfid LEFT JOIN tb_company AS cp ON cp.id = cr.company_id LIMIT 100&quot; -v 1</div><div class="line"></div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `ca`.`tid` AS `tid`,`ca`.`pfid` AS `pfid`,`ca`.`cash` AS `cash`,`ca`.`gold` AS `gold`,`ca`.`order_time` AS `order_time`,`ca`.`status` AS `status`,`ca`.`op_id` AS `op_id`,`ca`.`op_time` AS `op_time`,`ca`.`to_account` AS `to_account`,`ch`.`name` AS `name`,`ch`.`phone` AS `phone`,`ch`.`birthday` AS `birthday`,`ch`.`address` AS `address`,`ch`.`id_card_address` AS `id_card_address`,`ch`.`id_card_img_0` AS `id_card_img_0`,`ch`.`id_card_img_1` AS `id_card_img_1`,`ch`.`bank_card_img` AS `bank_card_img`,`ch`.`bank_code` AS `bank_code`,`ch`.`bank_name` AS `bank_name`,`ch`.`email` AS `email`,`ch`.`bank_branch_name` AS `bank_branch_name`,`cr`.`company_id` AS `company_id`,`cp`.`company` AS `company`,`ch`.`cashier_type` AS `cashier_type`,`ch`.`op_id` AS `cashier_op_id` from (((`db_billing`.`tb_cashier` `ca` left join `db_billing`.`tb_cashier_hot` `ch` on((`ca`.`tid` = `ch`.`tid`))) left join `db_billing`.`tb_company_relationship` `cr` on((`cr`.`pfid` = `ca`.`pfid`))) le</div><div class="line">2017-05-12 17:48:12 31770 [Note] 第2步：开始解析join on条件:ca.tid=ch.tid </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第3步：开始解析join on条件:cr.pfid=ca.pfid </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第4步：开始解析join on条件:cp.id=cr.company_id </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第5步：开始选择驱动表,一共有1个候选驱动表 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] explain select * from tb_cashier </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第6步：候选驱动表tb_cashier的结果集行数为:182 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第7步：选择表tb_cashier为驱动表 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第8步：表tb_cashier 的SQL太逆天,没有优化建议 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第9步：开始验证 字段tid是不是主键。表名:tb_cashier_hot </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_cashier_hot where Key_name = &apos;PRIMARY&apos; and Column_name =&apos;tid&apos; and Seq_in_index = 1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第10步：字段tid不是主键。表名:tb_cashier_hot </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第11步：开始验证 字段tid是不是主键。表名:tb_cashier_hot </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_cashier_hot where Key_name = &apos;PRIMARY&apos; and Column_name =&apos;tid&apos; and Seq_in_index = 1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第12步：字段tid不是主键。表名:tb_cashier_hot </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第13步：开始验证表中是否已存在相关索引。表名:tb_cashier_hot, 字段名:tid, 在索引中的位置:1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_cashier_hot where Column_name =&apos;tid&apos; and Seq_in_index =1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第14步：开始输出表tb_cashier_hot索引优化建议: </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] Create_Index_SQL：alter table tb_cashier_hot add index idx_tid(tid) </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第15步：开始验证 字段pfid是不是主键。表名:tb_company_relationship </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_company_relationship where Key_name = &apos;PRIMARY&apos; and Column_name =&apos;pfid&apos; and Seq_in_index = 1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第16步：字段pfid不是主键。表名:tb_company_relationship </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第17步：开始验证 字段pfid是不是主键。表名:tb_company_relationship </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_company_relationship where Key_name = &apos;PRIMARY&apos; and Column_name =&apos;pfid&apos; and Seq_in_index = 1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第18步：字段pfid不是主键。表名:tb_company_relationship </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第19步：开始验证表中是否已存在相关索引。表名:tb_company_relationship, 字段名:pfid, 在索引中的位置:1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_company_relationship where Column_name =&apos;pfid&apos; and Seq_in_index =1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第20步：索引(pfid)已存在 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第21步：开始验证 字段id是不是主键。表名:tb_company </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] show index from tb_company where Key_name = &apos;PRIMARY&apos; and Column_name =&apos;id&apos; and Seq_in_index = 1 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第22步：字段id是主键。表名:tb_company </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第23步：表tb_company 经过运算得到的索引列首列是主键,直接放弃,没有优化建议 </div><div class="line"></div><div class="line">2017-05-12 17:48:12 31770 [Note] 第24步: SQLAdvisor结束!</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#mysql 优化策略&lt;/p&gt;
&lt;p&gt;目前看到喜欢的mysql优化策略来自&lt;a href=&quot;http://tech.meituan.com/mysql-index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;美团点评技术团队&lt;/a&gt;&lt;/p&gt;
&lt;
    
    </summary>
    
    
      <category term="mysql" scheme="https://shihp.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>session解析</title>
    <link href="https://shihp.github.io/2017/05/12/session/cookie%E7%A6%81%E7%94%A8%E6%8E%89%E4%B9%8B%E5%90%8E/"/>
    <id>https://shihp.github.io/2017/05/12/session/cookie禁用掉之后/</id>
    <published>2017-05-12T09:20:44.000Z</published>
    <updated>2018-01-17T09:07:58.602Z</updated>
    
    <content type="html"><![CDATA[<p>#session解析</p>
<p>##http<br>Http是一种无状态性的协议。这是因为此种协议不要求浏览器在每次请求中标明它自己的身份，并且浏览器以及服务器之间并没有保持一个持久性的连接用于多个页面之间的访问。当一个用户访问一个站点的时候，用户的浏览器发送一个http请求到服务器，服务器返回给浏览器一个http响应。其实很简单的一个概念，客户端一个请求，服务器端一个回复，这就是整个基于http协议的通讯过程。</p>
<p>##cookie<br>Cookie（复数形态Cookies），中文名称为“小型文本文件”或“小甜饼”[1]，指某些网站为了辨别用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）。定义于RFC2109。是网景公司的前雇员卢·蒙特利在1993年3月的发明[2]。</p>
<p>浏览器中cookie<br><img src="https://upload.cc/i/076Py3.jpg" alt="Alt text"></p>
<p>##禁用cookie之后</p>
<p>当禁用cookie之后，浏览器进行网页的访问，cookie就不存在了，自然不能将session_id传入到服务端，服务端也就无法识别用户的身份。</p>
<p>这里面的核心问题其实跟cookie没关系，仅仅是session_id（用户身份标识）无法传输到服务端了。</p>
<p>那我们把session_id作为一个参数来看待，解决的问题的方案就出来了，手动的传输我们session_id到服务端就好了。</p>
<p>这就是url重写。不管是get 还是post 请求，根据业务相应的传输方案就好。</p>
<p>当前端里面的session_id，通过请求发送到服务器之后，php服务端处理方案是：</p>
<ol>
<li>获取客户端传入的session_id,</li>
<li>设置session_id </li>
<li>即可正常的读取session内容</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">session_start();</div><div class="line">session_id(<span class="string">'020e163uku6ptt7cm6eoj50992'</span>);</div><div class="line">var_dump(<span class="variable">$_SESSION</span>);</div><div class="line"><span class="keyword">if</span> (empty(<span class="variable">$_SESSION</span>[<span class="string">'count'</span>])) &#123;</div><div class="line">    <span class="variable">$_SESSION</span>[<span class="string">'count'</span>] = 1;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="variable">$_SESSION</span>[<span class="string">'count'</span>]++;</div><div class="line">&#125;</div><div class="line">?&gt;</div><div class="line"></div><div class="line">&lt;p&gt;</div><div class="line">    Hello visitor, you have seen this page &lt;?php <span class="built_in">echo</span> <span class="variable">$_SESSION</span>[<span class="string">'count'</span>].htmlspecialchars(SID); ?&gt; times.</div><div class="line">&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;p&gt;</div><div class="line">    To <span class="built_in">continue</span>, &lt;a href=<span class="string">"&lt;?php echo "</span>nextpage.php?<span class="string">". htmlspecialchars(SID); ?&gt;"</span>&gt;click here&lt;/a&gt;.</div><div class="line">&lt;/p&gt;</div></pre></td></tr></table></figure>
<p><em>上述代码</em></p>
<blockquote>
<p>SID的session_id，在cookie被禁用的模式下，会自动被赋值<br>session_id($sid)，通过手动设置session_id 既可以实现session的状态</p>
</blockquote>
<p>##php 中的 session</p>
<p>php中session的位置可以进行配置：<br>session.save_path = “/tmp/session”</p>
<p>我使用的服务器，默认在/tmp里面<br>session在服务器上的实际存在情况<br>|字段|值|<br>|-:-|<br>|path |<code>/tmp/sess_ucqqv1ej1lulttmste47hpuj56</code>|<br>|info|<code>$key\|type:len:&quot;$value&quot;\</code></p>
<p>参考文档：</p>
<p><a href="http://www.jianshu.com/p/2b7c10291aad" target="_blank" rel="external">SESSION 原理</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#session解析&lt;/p&gt;
&lt;p&gt;##http&lt;br&gt;Http是一种无状态性的协议。这是因为此种协议不要求浏览器在每次请求中标明它自己的身份，并且浏览器以及服务器之间并没有保持一个持久性的连接用于多个页面之间的访问。当一个用户访问一个站点的时候，用户的浏览器发送一个htt
    
    </summary>
    
    
      <category term="session" scheme="https://shihp.github.io/tags/session/"/>
    
  </entry>
  
</feed>
